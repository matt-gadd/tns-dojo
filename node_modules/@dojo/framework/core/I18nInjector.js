(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "tslib", "../i18n/i18n", "./Injector", "../shim/Promise"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require("tslib");
    var i18n_1 = require("../i18n/i18n");
    var Injector_1 = require("./Injector");
    var Promise_1 = require("../shim/Promise");
    exports.INJECTOR_KEY = '__i18n_injector';
    var I18nInjector = /** @class */ (function (_super) {
        tslib_1.__extends(I18nInjector, _super);
        function I18nInjector() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        I18nInjector.prototype.set = function (localeData) {
            var _this = this;
            if (localeData === void 0) { localeData = {}; }
            var result = i18n_1.setLocale({ locale: localeData.locale || i18n_1.getComputedLocale() });
            if (Promise_1.isThenable(result)) {
                result.then(function () {
                    _super.prototype.set.call(_this, localeData);
                });
                return;
            }
            _super.prototype.set.call(this, localeData);
        };
        return I18nInjector;
    }(Injector_1.Injector));
    exports.I18nInjector = I18nInjector;
    function registerI18nInjector(localeData, registry) {
        var injector = new I18nInjector(localeData);
        registry.defineInjector(exports.INJECTOR_KEY, function (invalidator) {
            injector.setInvalidator(invalidator);
            return function () { return injector; };
        });
        return injector;
    }
    exports.registerI18nInjector = registerI18nInjector;
    exports.default = I18nInjector;
});
//# sourceMappingURL=I18nInjector.js.map