{"version":3,"file":"I18n.mjs","sourceRoot":"","sources":["I18n.ts"],"names":[],"mappings":";;;;;;AAAA,mCAAmC;AACnC,OAAO,EAAE,cAAc,EAAoB,SAAS,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AAChG,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AACpC,OAAO,EAAE,WAAW,EAAE,MAAM,6BAA6B,CAAC;AAC1D,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAC;AAIrD,OAAO,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;AACnC,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AAChD,OAAO,gBAAgB,MAAM,gCAAgC,CAAC;AAC9D,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAG/C,OAAO,EAAE,YAAY,EAAE,oBAAoB,EAAE,MAAM,iBAAiB,CAAC;AAgCrE,MAAM,iBAAiB,GAAgC,IAAI,OAAO,EAAE,CAAC;AAErE,MAAM,UAAU,SAAS,CAAyC,IAAO;IAmCxE,IAAe,IAAI,GAAnB,MAAe,IAAK,SAAQ,IAAI;QAGxB,cAAc,CAAqB,UAAqB;YAC9D,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;YAC7C,IAAI,UAAU,EAAE;gBACf,IAAI,UAAU,YAAY,GAAG,EAAE;oBAC9B,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,UAAU,CAAC;iBACtD;qBAAM;oBACN,UAAU,GAAG,UAAuB,CAAC;iBACrC;aACD;YACD,OAAO,cAAc,CAAC,UAAU,EAAE;gBACjC,MAAM;gBACN,WAAW,EAAE,GAAG,EAAE;oBACjB,IAAI,CAAC,UAAU,EAAE,CAAC;gBACnB,CAAC;aACD,CAAC,CAAC;QACJ,CAAC;QAGS,eAAe,CAAC,MAAuB;YAChD,QAAQ,CAAC,MAAM,EAAE;gBAChB,QAAQ,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,EAAE;oBAC3B,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;oBACxC,MAAM,UAAU,GAAiC,EAAE,CAAC;oBACpD,IAAI,OAAO,GAAG,KAAK,SAAS,EAAE;wBAC7B,UAAU,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;qBACxC;oBACD,IAAI,MAAM,EAAE;wBACX,UAAU,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;qBAC5B;oBACD,IAAI,CAAC,UAAU,qBAAQ,IAAI,CAAC,UAAU,EAAK,UAAU,CAAE,CAAC;oBACxD,OAAO,EAAE,CAAC;gBACX,CAAC;gBACD,SAAS,EAAE,OAAO;aAClB,CAAC,CAAC;YACH,OAAO,MAAM,CAAC;QACf,CAAC;KACD,CAAA;IAlBA;QADC,WAAW,EAAE;+CAkBb;IAtCa,IAAI;QAlClB,gBAAgB,CAAC,UAA+C,UAAe;YAC/E,MAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;YACjD,IAAI,cAAkC,CAAC;YACvC,IAAI,WAAgC,CAAC;YACrC,IAAI,QAAQ,EAAE;gBACb,MAAM,gBAAgB,GAAG,QAAQ,EAA0B,CAAC;gBAC5D,IAAI,gBAAgB,EAAE;oBACrB,MAAM,kBAAkB,GAAG,gBAAgB,CAAC,GAAG,EAAE,CAAC;oBAClD,IAAI,kBAAkB,EAAE;wBACvB,cAAc,GAAG,kBAAkB,CAAC,MAAM,CAAC;wBAC3C,WAAW,GAAG,kBAAkB,CAAC,GAAG,CAAC;qBACrC;iBACD;aACD;YACD,MAAM,cAAc,GAAG,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACnD,iBAAiB,CAAC,GAAG,CAAC,IAAI,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;YAE/C,IAAI,UAAU,CAAC,MAAM,IAAI,cAAc,KAAK,UAAU,CAAC,MAAM,EAAE;gBAC9D,MAAM,MAAM,GAAG,SAAS,CAAC,EAAE,MAAM,EAAE,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;gBACrE,IAAI,UAAU,CAAC,MAAM,CAAC,EAAE;oBACvB,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE;wBAChB,IAAI,CAAC,UAAU,EAAE,CAAC;oBACnB,CAAC,CAAC,CAAC;oBACH,OAAO;wBACN,MAAM,EAAE,cAAc,IAAI,cAAc,IAAI,gBAAgB,EAAE;wBAC9D,GAAG,EAAE,UAAU,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW;qBAChE,CAAC;iBACF;aACD;YACD,OAAO;gBACN,MAAM,EAAE,UAAU,CAAC,MAAM,IAAI,cAAc,IAAI,gBAAgB,EAAE;gBACjE,GAAG,EAAE,UAAU,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW;aAChE,CAAC;QACH,CAAC,CAAC;OACa,IAAI,CAuClB;IAED,OAAO,IAAI,CAAC;AACb,CAAC;AAED,eAAe,SAAS,CAAC","sourcesContent":["/* tslint:disable:interface-name */\nimport { localizeBundle, Bundle, Messages, setLocale, getCurrentLocale } from '../../i18n/i18n';\nimport { isVNode } from './../vdom';\nimport { afterRender } from './../decorators/afterRender';\nimport { getInjector } from './../decorators/inject';\nimport { Constructor, DNode, VNodeProperties, LocalizedMessages, I18nProperties, LocaleData } from './../interfaces';\nimport { Injector } from './../Injector';\nimport { WidgetBase } from './../WidgetBase';\nimport { decorate } from '../util';\nimport { isThenable } from '../../shim/Promise';\nimport beforeProperties from '../decorators/beforeProperties';\nimport { INJECTOR_KEY } from '../I18nInjector';\n\nexport { LocalizedMessages, I18nProperties, LocaleData } from './../interfaces';\nexport { INJECTOR_KEY, registerI18nInjector } from '../I18nInjector';\n\n/**\n * interface for I18n functionality\n */\nexport interface I18nMixin {\n\t/**\n\t * Return the cached messages for the specified bundle for the current locale, assuming they have already\n\t * been loaded. If the locale-specific messages have not been loaded, they are fetched and the widget state\n\t * is updated.\n\t *\n\t * @param bundle\n\t * The required bundle object for which available locale messages should be loaded.\n\t *\n\t * @return\n\t * An object containing the localized messages, along with a `format` method for formatting ICU-formatted\n\t * templates and an `isPlaceholder` property indicating whether the returned messages are the defaults.\n\t */\n\tlocalizeBundle<T extends Messages>(bundle: Bundle<T>): LocalizedMessages<T>;\n\n\tproperties: I18nProperties;\n}\n\n/**\n * @private\n * An internal helper interface for defining locale and text direction attributes on widget nodes.\n */\ninterface I18nVNodeProperties extends VNodeProperties {\n\tdir: string;\n\tlang: string;\n}\n\nconst previousLocaleMap: WeakMap<WidgetBase, string> = new WeakMap();\n\nexport function I18nMixin<T extends Constructor<WidgetBase<any>>>(Base: T): T & Constructor<I18nMixin> {\n\t@beforeProperties(function(this: WidgetBase & { own: Function }, properties: any) {\n\t\tconst injector = getInjector(this, INJECTOR_KEY);\n\t\tlet injectedLocale: string | undefined;\n\t\tlet injectedRtl: boolean | undefined;\n\t\tif (injector) {\n\t\t\tconst injectLocaleData = injector() as Injector<LocaleData>;\n\t\t\tif (injectLocaleData) {\n\t\t\t\tconst injectedLocaleData = injectLocaleData.get();\n\t\t\t\tif (injectedLocaleData) {\n\t\t\t\t\tinjectedLocale = injectedLocaleData.locale;\n\t\t\t\t\tinjectedRtl = injectedLocaleData.rtl;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst previousLocale = previousLocaleMap.get(this);\n\t\tpreviousLocaleMap.set(this, properties.locale);\n\n\t\tif (properties.locale && previousLocale !== properties.locale) {\n\t\t\tconst result = setLocale({ locale: properties.locale, local: true });\n\t\t\tif (isThenable(result)) {\n\t\t\t\tresult.then(() => {\n\t\t\t\t\tthis.invalidate();\n\t\t\t\t});\n\t\t\t\treturn {\n\t\t\t\t\tlocale: previousLocale || injectedLocale || getCurrentLocale(),\n\t\t\t\t\trtl: properties.rtl !== undefined ? properties.rtl : injectedRtl\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tlocale: properties.locale || injectedLocale || getCurrentLocale(),\n\t\t\trtl: properties.rtl !== undefined ? properties.rtl : injectedRtl\n\t\t};\n\t})\n\tabstract class I18n extends Base {\n\t\tpublic abstract properties: I18nProperties;\n\n\t\tpublic localizeBundle<T extends Messages>(baseBundle: Bundle<T>): LocalizedMessages<T> {\n\t\t\tlet { locale, i18nBundle } = this.properties;\n\t\t\tif (i18nBundle) {\n\t\t\t\tif (i18nBundle instanceof Map) {\n\t\t\t\t\tbaseBundle = i18nBundle.get(baseBundle) || baseBundle;\n\t\t\t\t} else {\n\t\t\t\t\tbaseBundle = i18nBundle as Bundle<T>;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn localizeBundle(baseBundle, {\n\t\t\t\tlocale,\n\t\t\t\tinvalidator: () => {\n\t\t\t\t\tthis.invalidate();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t@afterRender()\n\t\tprotected renderDecorator(result: DNode | DNode[]): DNode | DNode[] {\n\t\t\tdecorate(result, {\n\t\t\t\tmodifier: (node, breaker) => {\n\t\t\t\t\tconst { locale, rtl } = this.properties;\n\t\t\t\t\tconst properties: Partial<I18nVNodeProperties> = {};\n\t\t\t\t\tif (typeof rtl === 'boolean') {\n\t\t\t\t\t\tproperties['dir'] = rtl ? 'rtl' : 'ltr';\n\t\t\t\t\t}\n\t\t\t\t\tif (locale) {\n\t\t\t\t\t\tproperties['lang'] = locale;\n\t\t\t\t\t}\n\t\t\t\t\tnode.properties = { ...node.properties, ...properties };\n\t\t\t\t\tbreaker();\n\t\t\t\t},\n\t\t\t\tpredicate: isVNode\n\t\t\t});\n\t\t\treturn result;\n\t\t}\n\t}\n\n\treturn I18n;\n}\n\nexport default I18nMixin;\n"]}