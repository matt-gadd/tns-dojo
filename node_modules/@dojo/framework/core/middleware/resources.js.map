{"version":3,"file":"resources.js","sourceRoot":"","sources":["resources.ts"],"names":[],"mappings":"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","sourcesContent":["import Map from '../../shim/Map';\nimport Set from '../../shim/Set';\nimport { create, diffProperty, invalidator, destroy } from '../vdom';\nimport { Invalidator } from '../interfaces';\nimport { isThenable } from '../../shim/Promise';\nimport { auto } from '../diff';\n\n// Resource General\n\ntype SubscriptionType = 'read' | 'find' | 'meta' | 'loading' | 'failed';\ntype InvalidatorMaps = { [key in SubscriptionType]: Map<string, Set<Invalidator>> };\ntype StatusType = 'LOADING' | 'FAILED';\ntype ResourceQuery<S> = { [P in keyof S]?: any };\ntype TransformConfig<T, S = void> = { [P in keyof T]: S extends void ? string : keyof S };\ninterface ResourceOptions<S> {\n\tpage: number | number[];\n\tsize: number;\n\tquery: ResourceQuery<S>;\n}\ninterface Options<S> {\n\t(options?: Partial<ResourceOptions<S>>): ResourceOptions<S>;\n\toptions: any;\n}\nexport interface ResourceFindOptions<S> {\n\toptions: ResourceOptions<S>;\n\tquery: ResourceQuery<S>;\n\tstart: number;\n\ttype?: string;\n}\n\nexport interface ResourceInitOptions {\n\tid: string;\n}\n\n// Resource Template\n\nexport interface ResourceReadRequest<RESOURCE> {\n\toffset: number;\n\tsize: number;\n\tquery: ResourceQuery<RESOURCE>;\n}\nexport interface ResourceReadResponse<RESOURCE> {\n\tdata: RESOURCE[];\n\ttotal: number;\n}\nexport interface ResourceFindRequest<RESOURCE> {\n\toptions: ResourceOptions<RESOURCE>;\n\tquery: ResourceQuery<RESOURCE>;\n\tstart: number;\n\ttype: string;\n}\nexport interface ResourceFindResponse<RESOURCE> {\n\titem: RESOURCE;\n\tindex: number;\n}\n\nexport interface ResourceFindResult<RESOURCE> {\n\titem: RESOURCE;\n\tpage: number;\n\tindex: number;\n\tpageIndex: number;\n}\n\nexport interface ResourceMeta {\n\ttotal: number | undefined;\n}\n\nexport interface ResourceGet<RESOURCE> {\n\t(request?: Partial<ResourceReadRequest<RESOURCE>>): ResourceReadResponse<RESOURCE>;\n}\nexport interface ResourcePut<RESOURCE> {\n\t(readResponse: ResourceReadResponse<RESOURCE>, readRequest: ResourceReadRequest<RESOURCE>): void;\n\t(findResponse: ResourceFindResponse<RESOURCE> | undefined, findRequest: ResourceFindRequest<RESOURCE>): void;\n}\nexport interface ResourceControls<RESOURCE> {\n\tget: ResourceGet<RESOURCE>;\n\tput: ResourcePut<RESOURCE>;\n}\nexport interface ResourceRead<RESOURCE> {\n\t(request: ResourceReadRequest<RESOURCE>, controls: ResourceControls<RESOURCE>): void | Promise<void>;\n}\nexport interface ResourceFind<RESOURCE> {\n\t(options: ResourceFindRequest<RESOURCE>, controls: ResourceControls<RESOURCE>): void | Promise<void>;\n}\n\ninterface BaseResourceInitRequest {\n\tid: string;\n}\n\nexport interface ResourceInit<RESOURCE, INIT> {\n\t(request: BaseResourceInitRequest & INIT, controls: ResourceControls<RESOURCE>): void;\n}\n\ninterface ResourceTemplate<RESOURCE = {}, MIDDLEWARE = {}> {\n\tread: ResourceRead<RESOURCE>;\n\tfind: ResourceFind<RESOURCE>;\n}\n\ninterface ResourceTemplateWithInit<RESOURCE = {}, INIT = any, MIDDLEWARE = {}> {\n\tinit: ResourceInit<RESOURCE, INIT>;\n\tread: ResourceRead<RESOURCE>;\n\tfind: ResourceFind<RESOURCE>;\n}\n\n// Resource Interfaces\n\nexport interface Resource<S = {}> {\n\tfind(options: ResourceFindOptions<S>): ResourceFindResult<S> | undefined;\n\tgetOrRead(options: ResourceOptions<S>): (undefined | S[])[];\n\tmeta(options: ResourceOptions<S>, read: boolean): ResourceMeta | undefined;\n\tisLoading(options: ResourceOptions<S> | ResourceFindOptions<S>): boolean;\n\tisFailed(options: ResourceOptions<S>): boolean;\n\tsubscribeFind(invalidator: Invalidator, options: ResourceFindOptions<S>): void;\n\tsubscribeRead(invalidator: Invalidator, options: ResourceOptions<S>): void;\n\tsubscribeMeta(invalidator: Invalidator, options: ResourceOptions<S>): void;\n\tsubscribeLoading(invalidator: Invalidator, options: ResourceOptions<S> | ResourceFindOptions<S>): void;\n\tsubscribeFailed(invalidator: Invalidator, options: ResourceOptions<S> | ResourceFindOptions<S>): void;\n\tunsubscribe(invalidator: Invalidator): void;\n\tinit(initOptions: ResourceInitOptions, requireDiff?: boolean): void;\n\tdestroy(id: string): void;\n}\n\nexport type ResourceProperty<MIDDLEWARE> = MIDDLEWARE extends infer RESOURCE\n\t? {\n\t\t\ttemplate: {\n\t\t\t\ttemplate: ResourceTemplate<RESOURCE, MIDDLEWARE>;\n\t\t\t\ttransform?: TransformConfig<MIDDLEWARE, any>;\n\t\t\t\tinitOptions?: ResourceInitOptions;\n\t\t\t\tid?: string;\n\t\t\t};\n\t\t\toptions?: Options<MIDDLEWARE>;\n\t  }\n\t: any;\n\nexport interface ResourceMiddlewareProperties<MIDDLEWARE> {\n\tresource: ResourceProperty<MIDDLEWARE>;\n}\n\ninterface ResourceTemplateWrapper<RESOURCE = {}, MIDDLEWARE = {}> {\n\ttemplate: ResourceTemplate<RESOURCE, any>;\n\ttransform?: TransformConfig<{ [P in keyof MIDDLEWARE]: {} }, RESOURCE>;\n\tinitOptions?: ResourceInitOptions;\n\tid?: string;\n}\n\n// Resource Middleware Interfaces\n\ninterface ResourceMiddleware<MIDDLEWARE = {}> {\n\t<RESOURCE>(\n\t\toptions: {\n\t\t\ttemplate: ResourceTemplate<RESOURCE, MIDDLEWARE>;\n\t\t\toptions?: Options<{}>;\n\t\t}\n\t): {\n\t\ttemplate: {\n\t\t\ttemplate: ResourceTemplate<RESOURCE, MIDDLEWARE>;\n\t\t};\n\t\toptions: Options<{}>;\n\t\ttransform?: any;\n\t};\n\t<RESOURCE, MIDDLEWARE>(\n\t\toptions: {\n\t\t\ttemplate: ResourceTemplate<RESOURCE, any>;\n\t\t\ttransform: TransformConfig<MIDDLEWARE, RESOURCE>;\n\t\t\toptions?: Options<{}>;\n\t\t}\n\t): {\n\t\ttemplate: {\n\t\t\ttemplate: ResourceTemplate<any, any>;\n\t\t\ttransform: TransformConfig<MIDDLEWARE, RESOURCE>;\n\t\t};\n\t\toptions: Options<{}>;\n\t};\n\t<RESOURCE, INIT, DATA extends RESOURCE>(\n\t\toptions: {\n\t\t\ttemplate: ResourceTemplateWithInit<RESOURCE, INIT, MIDDLEWARE>;\n\t\t\tinitOptions: INIT & { id: string };\n\t\t\toptions?: Options<{}>;\n\t\t}\n\t): {\n\t\ttemplate: {\n\t\t\ttemplate: ResourceTemplateWithInit<RESOURCE, INIT, MIDDLEWARE>;\n\t\t};\n\t\toptions: Options<{}>;\n\t\ttransform?: any;\n\t};\n\t<RESOURCE, INIT, MIDDLEWARE, DATA extends RESOURCE>(\n\t\toptions: {\n\t\t\ttemplate: ResourceTemplateWithInit<RESOURCE, INIT, any>;\n\t\t\ttransform: TransformConfig<MIDDLEWARE, RESOURCE>;\n\t\t\tinitOptions: INIT & { id: string };\n\t\t\toptions?: Options<{}>;\n\t\t}\n\t): {\n\t\ttemplate: {\n\t\t\ttemplate: ResourceTemplateWithInit<any, INIT, any>;\n\t\t\ttransform: TransformConfig<MIDDLEWARE, RESOURCE>;\n\t\t};\n\t\toptions: Options<{}>;\n\t};\n\t<RESOURCE, MIDDLEWARE>(\n\t\toptions: {\n\t\t\ttemplate: ResourceTemplateWrapper<RESOURCE, MIDDLEWARE>;\n\t\t\toptions: Options<{}>;\n\t\t}\n\t): {\n\t\ttemplate: {\n\t\t\ttemplate: ResourceTemplate<any, any>;\n\t\t\ttransform: TransformConfig<MIDDLEWARE, RESOURCE>;\n\t\t};\n\t\toptions: Options<{}>;\n\t};\n\tcreateOptions(id: string): Options<{}>;\n\tgetOrRead<RESOURCE>(\n\t\ttemplate: ResourceTemplate<RESOURCE> & { type: 'standard' },\n\t\toptions: ResourceOptions<any>\n\t): RESOURCE[][];\n\tgetOrRead<RESOURCE, INIT>(\n\t\ttemplate: ResourceTemplateWithInit<RESOURCE, INIT> & { type: 'init' },\n\t\toptions: ResourceOptions<any>,\n\t\tinitOptions: INIT & { id: string }\n\t): RESOURCE[][];\n\tgetOrRead<T extends ResourceTemplate<any, any>>(\n\t\ttemplate: {\n\t\t\ttemplate: T;\n\t\t\ttransform?: any;\n\t\t\tdata?: any;\n\t\t},\n\t\toptions: ResourceOptions<any>\n\t): T extends ResourceTemplate<infer RESOURCE> ? RESOURCE[][] : void;\n\tfind<RESOURCE>(\n\t\ttemplate: ResourceTemplate<RESOURCE> & { type: 'standard' },\n\t\toptions: ResourceFindOptions<any>\n\t): ResourceFindResult<RESOURCE> | undefined;\n\tfind<RESOURCE, INIT>(\n\t\ttemplate: ResourceTemplateWithInit<RESOURCE, INIT> & { type: 'init' },\n\t\toptions: ResourceFindOptions<any>,\n\t\tinitOptions: INIT & { id: string }\n\t): ResourceFindResult<RESOURCE> | undefined;\n\tfind<T extends ResourceTemplate<any, any>>(\n\t\ttemplate: {\n\t\t\ttemplate: T;\n\t\t\ttransform?: any;\n\t\t\tdata?: any;\n\t\t},\n\t\toptions: ResourceFindOptions<any>\n\t): T extends ResourceTemplate<infer RESOURCE> ? ResourceFindResult<RESOURCE> | undefined : void;\n\tmeta<RESOURCE>(\n\t\ttemplate: ResourceTemplate<RESOURCE> & { type: 'standard' },\n\t\toptions: ResourceOptions<any>,\n\t\trequest?: boolean\n\t): ResourceMeta | undefined;\n\tmeta<RESOURCE, INIT>(\n\t\ttemplate: ResourceTemplateWithInit<RESOURCE, INIT> & { type: 'init' },\n\t\toptions: ResourceOptions<any>,\n\t\tinitOptions: INIT & { id: string },\n\t\trequest?: boolean\n\t): ResourceMeta | undefined;\n\tmeta<T extends ResourceTemplate<any, any>>(\n\t\ttemplate: {\n\t\t\ttemplate: T;\n\t\t\ttransform?: any;\n\t\t\tdata?: any;\n\t\t},\n\t\toptions: ResourceOptions<any>,\n\t\trequest?: boolean\n\t): ResourceMeta | undefined;\n\tisLoading<RESOURCE>(\n\t\ttemplate: ResourceTemplate<RESOURCE> & { type: 'standard' },\n\t\toptions: ResourceOptions<any> | ResourceFindOptions<any>\n\t): boolean;\n\tisLoading<RESOURCE, INIT>(\n\t\ttemplate: ResourceTemplateWithInit<RESOURCE, INIT> & { type: 'init' },\n\t\toptions: ResourceOptions<any> | ResourceFindOptions<any>,\n\t\tinitOptions: INIT & { id: string }\n\t): boolean;\n\tisLoading<T extends ResourceTemplate<any, any>>(\n\t\ttemplate: {\n\t\t\ttemplate: T;\n\t\t\ttransform?: any;\n\t\t\tdata?: any;\n\t\t},\n\t\toptions: ResourceOptions<any> | ResourceFindOptions<any>\n\t): boolean;\n\tisFailed<RESOURCE>(\n\t\ttemplate: ResourceTemplate<RESOURCE> & { type: 'standard' },\n\t\toptions: ResourceOptions<any> | ResourceFindOptions<any>\n\t): boolean;\n\tisFailed<RESOURCE, INIT>(\n\t\ttemplate: ResourceTemplateWithInit<RESOURCE, INIT> & { type: 'init' },\n\t\toptions: ResourceOptions<any> | ResourceFindOptions<any>,\n\t\tinitOptions: INIT & { id: string }\n\t): boolean;\n\tisFailed<T extends ResourceTemplate<any, any>>(\n\t\ttemplate: {\n\t\t\ttemplate: T;\n\t\t\ttransform?: any;\n\t\t\tdata?: any;\n\t\t},\n\t\toptions: ResourceOptions<any> | ResourceFindOptions<any>\n\t): boolean;\n}\n\nexport function createResourceTemplate<RESOURCE = void>(\n\ttemplate: ResourceTemplate<RESOURCE>\n): ResourceTemplate<RESOURCE> & { type: 'standard' } {\n\treturn template as ResourceTemplate<RESOURCE> & { type: 'standard' };\n}\n\nexport function createResourceTemplateWithInit<RESOURCE = void, INIT = never>(\n\ttemplate: ResourceTemplateWithInit<RESOURCE, INIT>\n): ResourceTemplateWithInit<RESOURCE, INIT> & { type: 'init' } {\n\treturn template as ResourceTemplateWithInit<RESOURCE, INIT> & { type: 'init' };\n}\n\nexport function createMemoryResourceTemplate<RESOURCE = void>(): ResourceTemplateWithInit<\n\tRESOURCE,\n\t{ data: RESOURCE[] }\n> & { type: 'init' } {\n\treturn { ...memoryTemplate } as ResourceTemplateWithInit<RESOURCE, { data: RESOURCE[] }> & { type: 'init' };\n}\n\nexport function defaultFilter(query: ResourceQuery<any>, item: any, type: string = 'contains') {\n\tconst queryKeys = Object.keys(query);\n\tfor (let i = 0; i < queryKeys.length; i++) {\n\t\tconst queryKey = queryKeys[i];\n\t\tconst value = query[queryKeys[i]];\n\t\tif (value) {\n\t\t\tconst itemValue = item[queryKey];\n\t\t\tlet result = true;\n\t\t\tif (typeof itemValue === 'string' && typeof value === 'string' && type !== 'exact') {\n\t\t\t\tif (type === 'contains') {\n\t\t\t\t\tresult = item[queryKey].toLowerCase().indexOf(value.toLowerCase()) !== -1;\n\t\t\t\t} else {\n\t\t\t\t\tresult = item[queryKey].toLowerCase().indexOf(value.toLowerCase()) === 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult = value === item[queryKey];\n\t\t\t}\n\t\t\tif (!result) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nexport function defaultFind(request: ResourceFindRequest<any>, { put, get }: ResourceControls<any>) {\n\tconst { type, options } = request;\n\tconst { query } = options;\n\tconst { data } = get({ query });\n\tlet found: ResourceFindResponse<any> | undefined;\n\tfor (let i = 0; i < data.length; i++) {\n\t\tconst item = data[i];\n\t\tif (item && defaultFilter(request.query, item, type)) {\n\t\t\tif (!found || i >= request.start) {\n\t\t\t\tfound = {\n\t\t\t\t\titem,\n\t\t\t\t\tindex: i\n\t\t\t\t};\n\t\t\t\tif (i >= request.start) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tput(found, request);\n}\n\nexport const memoryTemplate: ResourceTemplateWithInit<any, { data: any }> = Object.freeze({\n\tinit: ({ data }, { put }) => {\n\t\tput({ data, total: data.length }, { offset: 0, size: 30, query: {} });\n\t},\n\tread: (request, { get, put }) => {\n\t\tconst { data } = get();\n\t\tconst { offset, size } = request;\n\t\tconst filteredData = Object.keys(request.query).length\n\t\t\t? data.filter((item) => item && defaultFilter(request.query, item, 'contains'))\n\t\t\t: data;\n\t\tput({ data: filteredData.slice(offset, offset + size), total: filteredData.length }, request);\n\t},\n\tfind: (request, { get, put }) => {\n\t\tconst { type, options } = request;\n\t\tconst { query } = options;\n\t\tlet { data } = get({ query });\n\t\tif (!data.length) {\n\t\t\tdata = get().data.filter((item) => defaultFilter(query, item));\n\t\t}\n\t\tlet found: ResourceFindResponse<any> | undefined;\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tconst item = data[i];\n\t\t\tif (item && defaultFilter(request.query, item, type)) {\n\t\t\t\tif (!found || i >= request.start) {\n\t\t\t\t\tfound = {\n\t\t\t\t\t\titem,\n\t\t\t\t\t\tindex: i\n\t\t\t\t\t};\n\t\t\t\t\tif (i >= request.start) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tput(found, request);\n\t}\n});\n\nfunction getMetaKey({ query, size }: ResourceOptions<any>) {\n\treturn `size-${size}-query-${JSON.stringify(query)}`;\n}\n\nfunction getFindKey(findOptions: ResourceFindOptions<any>) {\n\tconst { options, ...find } = getFindOptions(findOptions);\n\treturn `size-${options.size}-query-${JSON.stringify(options.query)}-find-${JSON.stringify(find)}`;\n}\n\nfunction getReadKey({ page, size, query }: ResourceOptions<any>): string {\n\treturn `page-${JSON.stringify(page)}-size-${size}-query-${JSON.stringify(query)}`;\n}\n\nfunction getDataKey({ query = {} }: Partial<ResourceOptions<any>> | Partial<ResourceReadRequest<any>> = {}): string {\n\treturn `${JSON.stringify(query)}`;\n}\n\nfunction getFindOptions(findOptions: ResourceFindOptions<any>) {\n\tconst { type = 'contains', start, query, options } = findOptions;\n\treturn { type, start, query, options };\n}\n\nfunction isFindOptions(options: any): options is ResourceFindOptions<any> {\n\treturn Boolean(options && !!options.options);\n}\n\nfunction isFindRequest(options: any): options is ResourceFindRequest<any> {\n\treturn isFindOptions(options);\n}\n\nfunction isFindResponse(options: any): options is ResourceFindResponse<any> {\n\treturn Boolean(options && !!options.item);\n}\n\nfunction transformData(item: any, transformConfig: TransformConfig<any>) {\n\tlet transformedItem: any = {};\n\tlet sourceKeys: string[] = [];\n\tObject.keys(transformConfig).forEach((key: string) => {\n\t\tconst sourceKey = transformConfig[key as any];\n\t\ttransformedItem = {\n\t\t\t...transformedItem,\n\t\t\t[key]: item[sourceKey]\n\t\t};\n\t\tsourceKeys.push(sourceKey);\n\t});\n\tObject.keys(item)\n\t\t.filter((key) => sourceKeys.indexOf(key) === -1)\n\t\t.forEach((key) => {\n\t\t\ttransformedItem = {\n\t\t\t\t...transformedItem,\n\t\t\t\t[key]: item[key]\n\t\t\t};\n\t\t});\n\treturn transformedItem;\n}\n\nfunction transformQuery(query: ResourceQuery<any>, transformConfig: TransformConfig<any>) {\n\tconst queryKeys = Object.keys(query);\n\tlet transformedQuery: ResourceQuery<any> = {};\n\tfor (let i = 0; i < queryKeys.length; i++) {\n\t\tconst queryKey = queryKeys[i];\n\t\ttransformedQuery[transformConfig[queryKey] || queryKey] = query[queryKey];\n\t}\n\treturn transformedQuery;\n}\n\nfunction transformOptions<R extends ResourceOptions<any> | ResourceFindOptions<any>>(\n\toptions: R,\n\ttransformConfig?: TransformConfig<any>\n): R {\n\tif (transformConfig) {\n\t\tif (isFindOptions(options) && options.options.query) {\n\t\t\tconst query = transformQuery(options.options.query, transformConfig);\n\t\t\toptions.options = { ...options.options, query };\n\t\t}\n\t\tif (options.query && transformConfig) {\n\t\t\tconst query = transformQuery(options.query, transformConfig);\n\t\t\treturn { ...options, query };\n\t\t}\n\t}\n\treturn { ...options };\n}\n\nfunction isTemplateWithInit(value: any): value is ResourceTemplateWithInit<any> {\n\treturn Boolean(value && value.init);\n}\n\nfunction diffInitOptions(current: any, next: any) {\n\tconst keys = new Set([...Object.keys(current), ...Object.keys(next)]);\n\treturn [...keys].some((initKey) => auto(current[initKey], next[initKey], 1).changed);\n}\n\nfunction createResource<S = never, T extends ResourceInitOptions = ResourceInitOptions>(\n\ttemplate: ResourceTemplate<S> | ResourceTemplateWithInit<S>,\n\tinitOptions?: T\n): Resource<S> {\n\tconst dataMap = new Map<string, S[]>();\n\tconst metaMap = new Map<string, ResourceMeta>();\n\tconst statusMap = new Map<string, StatusType>();\n\tconst findMap = new Map<string, undefined | ResourceFindResult<S>>();\n\tconst requestPageMap = new Map<string, number[]>();\n\tconst invalidatorMaps: InvalidatorMaps = {\n\t\tread: new Map<string, Set<Invalidator>>(),\n\t\tfind: new Map<string, Set<Invalidator>>(),\n\t\tmeta: new Map<string, Set<Invalidator>>(),\n\t\tfailed: new Map<string, Set<Invalidator>>(),\n\t\tloading: new Map<string, Set<Invalidator>>()\n\t};\n\tconst { read, find } = template;\n\n\tfunction get(request: Partial<ResourceReadRequest<S>> = {}) {\n\t\tconst dataKey = getDataKey(request);\n\t\tconst data = dataMap.get(dataKey) || [];\n\t\treturn { data, total: data.length };\n\t}\n\n\tfunction put(response: ResourceReadResponse<S>, request: ResourceReadRequest<S>): void;\n\tfunction put(response: ResourceFindResponse<S> | undefined, request: ResourceFindRequest<S>): void;\n\tfunction put(\n\t\tresponse: ResourceReadResponse<S> | ResourceFindResponse<S> | undefined,\n\t\trequest: ResourceReadRequest<S> | ResourceFindRequest<S>\n\t) {\n\t\tif (isFindRequest(request) && (isFindResponse(response) || !response)) {\n\t\t\tsetFind(response, request);\n\t\t} else if (!isFindRequest(request) && !isFindResponse(response) && response) {\n\t\t\tsetData(response, request);\n\t\t}\n\t}\n\n\tif (isTemplateWithInit(template)) {\n\t\ttemplate.init(initOptions, { put, get });\n\t}\n\n\tfunction invalidate(type: SubscriptionType, key: string) {\n\t\tconst keyedInvalidatorMap = invalidatorMaps[type];\n\t\tconst invalidatorSet = keyedInvalidatorMap.get(key);\n\t\tif (invalidatorSet) {\n\t\t\t[...invalidatorSet].forEach((invalidator) => {\n\t\t\t\tinvalidator();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction invalidateAll() {\n\t\tObject.keys(invalidatorMaps).forEach((key: string) => {\n\t\t\tconst map = invalidatorMaps[key as keyof InvalidatorMaps];\n\t\t\tmap.forEach((invalidatorSet) => {\n\t\t\t\tinvalidatorSet.forEach((invalidator) => {\n\t\t\t\t\tinvalidator();\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction subscribe(type: SubscriptionType, invalidator: Invalidator, key: string): void {\n\t\tconst keyedInvalidatorMap = invalidatorMaps[type];\n\t\tconst invalidatorSet = keyedInvalidatorMap.get(key) || new Set<Invalidator>();\n\t\tinvalidatorSet.add(invalidator);\n\t\tkeyedInvalidatorMap.set(key, invalidatorSet);\n\t}\n\n\tfunction subscribeRead(invalidator: Invalidator, options: ResourceOptions<S>) {\n\t\tsubscribe('read', invalidator, getReadKey(options));\n\t}\n\n\tfunction subscribeMeta(invalidator: Invalidator, options: ResourceOptions<S>) {\n\t\tsubscribe('meta', invalidator, getReadKey(options));\n\t}\n\n\tfunction subscribeFind(invalidator: Invalidator, options: ResourceFindOptions<S>) {\n\t\tsubscribe('find', invalidator, getFindKey(options));\n\t}\n\n\tfunction subscribeLoading(invalidator: Invalidator, options: ResourceOptions<S> | ResourceFindOptions<S>) {\n\t\tif (isFindOptions(options)) {\n\t\t\tsubscribe('loading', invalidator, getFindKey(options));\n\t\t} else {\n\t\t\tsubscribe('loading', invalidator, getReadKey(options));\n\t\t}\n\t}\n\n\tfunction subscribeFailed(invalidator: Invalidator, options: ResourceOptions<S> | ResourceFindOptions<S>) {\n\t\tif (isFindOptions(options)) {\n\t\t\tsubscribe('failed', invalidator, getFindKey(options));\n\t\t} else {\n\t\t\tsubscribe('failed', invalidator, getReadKey(options));\n\t\t}\n\t}\n\n\tfunction unsubscribe(invalidator: Invalidator) {\n\t\tObject.keys(invalidatorMaps).forEach((type) => {\n\t\t\tconst keyedInvalidatorMap = invalidatorMaps[type as SubscriptionType];\n\t\t\tconst keys = keyedInvalidatorMap.keys();\n\t\t\t[...keys].forEach((key) => {\n\t\t\t\tconst invalidatorSet = keyedInvalidatorMap.get(key);\n\t\t\t\tif (invalidatorSet && invalidatorSet.has(invalidator)) {\n\t\t\t\t\tinvalidatorSet.delete(invalidator);\n\t\t\t\t\tif (invalidatorSet.size === 0) {\n\t\t\t\t\t\tkeyedInvalidatorMap.delete(key);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tkeyedInvalidatorMap.set(key, invalidatorSet);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction releaseResource() {\n\t\tdataMap.clear();\n\t\tmetaMap.clear();\n\t\tstatusMap.clear();\n\t\trequestPageMap.clear();\n\t}\n\n\tfunction isStatus(statusType: StatusType, key: string) {\n\t\tconst status = statusMap.get(key);\n\t\tif (status) {\n\t\t\treturn status === statusType;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction setStatus(status: StatusType, key: string) {\n\t\tstatusMap.set(key, status);\n\t}\n\n\tfunction clearStatus(key: string) {\n\t\tstatusMap.delete(key);\n\t}\n\n\tfunction isLoading(options: ResourceOptions<S> | ResourceFindOptions<S>) {\n\t\tconst key = isFindOptions(options) ? getFindKey(options) : getReadKey(options);\n\t\treturn isStatus('LOADING', key);\n\t}\n\n\tfunction isFailed(options: ResourceOptions<S> | ResourceFindOptions<S>) {\n\t\tconst key = isFindOptions(options) ? getFindKey(options) : getReadKey(options);\n\t\treturn isStatus('FAILED', key);\n\t}\n\n\tfunction setMeta(options: ResourceOptions<S>, total: number) {\n\t\tconst metaKey = getMetaKey(options);\n\t\tlet meta = metaMap.get(metaKey);\n\t\tif (!meta) {\n\t\t\tmeta = { ...options, total };\n\t\t} else {\n\t\t\tif (!meta.total || total > meta.total) {\n\t\t\t\tmeta.total = total;\n\t\t\t}\n\t\t}\n\t\tinvalidate('meta', getMetaKey(options));\n\t\tmetaMap.set(metaKey, { ...meta });\n\t}\n\n\tfunction setData(response: ResourceReadResponse<S>, request: ResourceReadRequest<S>) {\n\t\tconst { data, total } = response;\n\t\tconst { size, offset, query } = request;\n\t\tconst dataKey = getDataKey(request);\n\t\tconst cachedData = dataMap.get(dataKey) || [];\n\t\tconst maxItem = total ? total : offset + data.length;\n\t\tfor (let i = offset; i < maxItem; i += 1) {\n\t\t\tif (data[i - offset] === undefined) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcachedData[i] = data[i - offset];\n\t\t}\n\t\tclearStatus(dataKey);\n\t\tdataMap.set(dataKey, cachedData);\n\t\tconst page = Math.floor(offset / size) + 1;\n\t\tsetMeta({ size, query, page }, total);\n\t\tinvalidate('read', getReadKey({ size, query, page }));\n\t\treturn cachedData.slice(offset, offset + size).filter(() => true);\n\t}\n\n\tfunction setFind(response: ResourceFindResponse<S> | undefined, request: ResourceFindRequest<S>) {\n\t\tconst { options } = request;\n\t\tconst { size } = options;\n\t\tconst key = getFindKey(request);\n\t\tif (!response) {\n\t\t\tfindMap.set(key, response);\n\t\t} else {\n\t\t\tfindMap.set(key, {\n\t\t\t\t...response,\n\t\t\t\tpage: Math.floor(response.index / size) + 1,\n\t\t\t\tpageIndex: response.index % size\n\t\t\t});\n\t\t}\n\t\tclearStatus(key);\n\t\tinvalidate('find', getFindKey(request));\n\t}\n\n\tfunction getCachedPageData(options: { page: number; size: number; query: ResourceQuery<S> }): S[] | undefined {\n\t\tconst { size, page } = options;\n\t\tconst metaKey = getMetaKey(options);\n\t\tconst dataKey = getDataKey(options);\n\t\tconst requestedPages = requestPageMap.get(metaKey) || [];\n\t\tconst cachedData = dataMap.get(dataKey);\n\t\tif (cachedData) {\n\t\t\tconst offset = (page - 1) * size;\n\t\t\tconst requestedCachedData = cachedData.slice(offset, offset + size).filter(() => true);\n\t\t\tsetMeta(options, cachedData.length);\n\t\t\tif (requestedCachedData.length === size || requestedPages.indexOf(page) !== -1) {\n\t\t\t\treturn requestedCachedData;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getOrRead(options: ResourceOptions<S>): (undefined | S[])[] {\n\t\tconst pages = Array.isArray(options.page) ? options.page : [options.page];\n\t\tconst { size, query } = options;\n\t\tconst getOrReadResponse: (undefined | S[])[] = [];\n\t\tconst requestKey = getReadKey(options);\n\t\tconst promises: Promise<any>[] = [];\n\n\t\tfor (let i = 0; i < pages.length; i++) {\n\t\t\tconst page = pages[i];\n\t\t\tconst offset = (page - 1) * size;\n\t\t\tconst statusKey = getReadKey({ page, size, query });\n\t\t\tconst metaKey = getMetaKey({ size, query, page });\n\t\t\tconst requestedPages = requestPageMap.get(metaKey) || [];\n\t\t\tif (isLoading({ page, size, query }) || isFailed({ page, size, query })) {\n\t\t\t\tgetOrReadResponse.push(undefined);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst cachedData = getCachedPageData({ size, query, page });\n\t\t\tif (cachedData) {\n\t\t\t\tgetOrReadResponse.push(cachedData);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\trequestedPages.push(page);\n\t\t\trequestPageMap.set(metaKey, requestedPages);\n\t\t\tconst response = read(\n\t\t\t\t{ offset, size, query },\n\t\t\t\t{\n\t\t\t\t\tget,\n\t\t\t\t\tput\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (isThenable<void>(response)) {\n\t\t\t\tpromises.push(response);\n\t\t\t\tgetOrReadResponse.push(undefined);\n\t\t\t\tsetStatus('LOADING', statusKey);\n\t\t\t\tinvalidate('loading', getReadKey({ size, page, query }));\n\t\t\t\tresponse\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tclearStatus(statusKey);\n\t\t\t\t\t\tinvalidate('read', getReadKey({ size, page, query }));\n\t\t\t\t\t\tinvalidate('loading', getReadKey({ size, page, query }));\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\tsetStatus('FAILED', statusKey);\n\t\t\t\t\t\tinvalidate('loading', getReadKey({ size, page, query }));\n\t\t\t\t\t\tinvalidate('failed', getReadKey({ size, page, query }));\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgetOrReadResponse.push(getCachedPageData({ size, query, page }));\n\t\t\t}\n\t\t}\n\t\tif (promises.length) {\n\t\t\tsetStatus('LOADING', requestKey);\n\t\t\tPromise.all(promises)\n\t\t\t\t.then(() => {\n\t\t\t\t\tclearStatus(requestKey);\n\t\t\t\t\tinvalidate('read', getReadKey(options));\n\t\t\t\t\tinvalidate('loading', getReadKey(options));\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tsetStatus('FAILED', requestKey);\n\t\t\t\t\tinvalidate('loading', getReadKey(options));\n\t\t\t\t\tinvalidate('failed', getReadKey(options));\n\t\t\t\t});\n\t\t}\n\t\treturn getOrReadResponse;\n\t}\n\n\tfunction resourceFind(options: ResourceFindOptions<S>): ResourceFindResult<S> | undefined {\n\t\tconst key = getFindKey(getFindOptions(options));\n\t\tif (isStatus('LOADING', key) || isStatus('FAILED', key)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (findMap.has(key)) {\n\t\t\treturn findMap.get(key);\n\t\t}\n\n\t\tconst response = find(getFindOptions(options), { put, get });\n\t\tif (isThenable(response)) {\n\t\t\tsetStatus('LOADING', key);\n\t\t\tinvalidate('loading', getFindKey(options));\n\t\t\tresponse.then(() => {\n\t\t\t\tclearStatus(key);\n\t\t\t\tinvalidate('find', getFindKey(options));\n\t\t\t\tinvalidate('loading', getFindKey(options));\n\t\t\t});\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\treturn findMap.get(key);\n\t\t}\n\t}\n\n\tfunction resourceInit(options: T, requireDiff = false) {\n\t\tif (isTemplateWithInit(template)) {\n\t\t\tlet reset = true;\n\t\t\tif (requireDiff) {\n\t\t\t\treset = diffInitOptions(initOptions, options);\n\t\t\t}\n\t\t\tif (reset) {\n\t\t\t\treleaseResource();\n\t\t\t\ttemplate.init(options, { put, get });\n\t\t\t\tinvalidateAll();\n\t\t\t}\n\t\t} else {\n\t\t\treleaseResource();\n\t\t}\n\t\tinitOptions = options;\n\t}\n\n\tfunction meta(options: ResourceOptions<S>, request = false) {\n\t\tif (request) {\n\t\t\tgetOrRead(options);\n\t\t}\n\t\treturn metaMap.get(getMetaKey(options));\n\t}\n\n\tfunction destroy(id: string) {\n\t\treleaseResource();\n\t\tObject.keys(invalidatorMaps).forEach((key) => {\n\t\t\tinvalidatorMaps[key as SubscriptionType].clear();\n\t\t});\n\t\tif (initOptions) {\n\t\t\tconst resourceMap = templateToResourceMap.get(template);\n\t\t\tif (resourceMap) {\n\t\t\t\tresourceMap.delete(`${id}/${initOptions.id}`);\n\t\t\t}\n\t\t}\n\t\ttemplateToResourceMap.get(template);\n\t}\n\n\treturn {\n\t\tfind: resourceFind,\n\t\tgetOrRead,\n\t\tinit: resourceInit,\n\t\tmeta,\n\t\tsubscribeMeta,\n\t\tsubscribeRead,\n\t\tsubscribeFind,\n\t\tsubscribeFailed,\n\t\tsubscribeLoading,\n\t\tunsubscribe,\n\t\tisLoading,\n\t\tisFailed,\n\t\tdestroy\n\t};\n}\n\nconst optionInvalidatorMap = new Map<any, Set<Invalidator>>();\nconst templateToResourceMap = new Map<ResourceTemplate<any>, Map<string, Resource<any>>>();\nconst idToResourceMap = new Map<string, Set<{ resource: Resource<any>; type: 'owner' | 'subscribed' }>>();\n\nfunction createOptionsWrapper(): Options<any> {\n\tlet options: ResourceOptions<any> = {\n\t\tpage: 1,\n\t\tsize: 30,\n\t\tquery: {}\n\t};\n\n\tfunction invalidate() {\n\t\tconst invalidatorSet = optionInvalidatorMap.get(setOptions) || [];\n\t\t[...invalidatorSet].forEach((invalidator) => {\n\t\t\tinvalidator();\n\t\t});\n\t}\n\n\tfunction setOptions(newOptions?: Partial<ResourceOptions<any>>): ResourceOptions<any> {\n\t\tif (newOptions) {\n\t\t\tconst calculatedOptions = { ...options, ...newOptions };\n\t\t\tconst { changed } = auto(options, calculatedOptions, 2);\n\t\t\tif (changed) {\n\t\t\t\toptions = calculatedOptions;\n\t\t\t\tinvalidate();\n\t\t\t}\n\t\t}\n\t\treturn options;\n\t}\n\tsetOptions.options = setOptions;\n\treturn setOptions;\n}\n\nfunction isTemplate(value: any): value is ResourceTemplate<any> {\n\treturn Boolean(value && typeof value.read === 'function');\n}\n\nfunction isResource(value: any): value is ResourceTemplateWrapper {\n\treturn Boolean(value && !!value.id);\n}\n\nfunction getResource(templateWrapper: ResourceTemplateWrapper, id: string): Resource<any>;\nfunction getResource(template: ResourceTemplate<any>, id: string, init?: any): Resource<any>;\nfunction getResource(\n\ttemplateOrWrapper: ResourceTemplateWrapper | ResourceTemplate<any>,\n\tid: string,\n\tinit?: any\n): Resource<any> {\n\tconst templateId = (isResource(templateOrWrapper) ? templateOrWrapper.id : init && `${id}/${init.id}`) || 'global';\n\tconst template = isResource(templateOrWrapper) ? templateOrWrapper.template : templateOrWrapper;\n\tconst initOptions = isResource(templateOrWrapper) ? templateOrWrapper.initOptions : init;\n\tconst resourceMap = templateToResourceMap.get(template) || new Map<string, Resource<any>>();\n\tlet resource = resourceMap.get(templateId);\n\tconst registeredResources =\n\t\tidToResourceMap.get(id) || new Set<{ resource: Resource<any>; type: 'owner' | 'subscribed' }>();\n\tif (!resource) {\n\t\tresource = createResource(template, initOptions);\n\t\tresourceMap.set(templateId, resource);\n\t\ttemplateToResourceMap.set(template, resourceMap);\n\t\tconst ownerId = templateId.substring(0, templateId.indexOf('/'));\n\t\tconst isOwner = ownerId === id;\n\t\tif (!isOwner) {\n\t\t\tconst ownerResources =\n\t\t\t\tidToResourceMap.get(ownerId) || new Set<{ resource: Resource<any>; type: 'owner' | 'subscribed' }>();\n\t\t\townerResources.add({ resource, type: 'owner' });\n\t\t\tidToResourceMap.set(ownerId, ownerResources);\n\t\t}\n\t\tregisteredResources.add({ resource, type: isOwner ? 'owner' : 'subscribed' });\n\t} else {\n\t\tif (init) {\n\t\t\tresource.init(init, true);\n\t\t}\n\t\tregisteredResources.add({ resource, type: 'subscribed' });\n\t}\n\tidToResourceMap.set(id, registeredResources);\n\treturn resource;\n}\n\nconst factory = create({ diffProperty, invalidator, destroy });\n\nconst resourceMiddlewareFactory = factory(\n\t({ id: middlewareId, middleware: { diffProperty, invalidator, destroy } }): ResourceMiddleware => {\n\t\tconst optionsMap = new Map<string, Options<any>>();\n\t\tdestroy(() => {\n\t\t\tconst resources = idToResourceMap.get(middlewareId);\n\t\t\tif (resources) {\n\t\t\t\tresources.forEach((resource) => {\n\t\t\t\t\tif (resource.type === 'subscribed') {\n\t\t\t\t\t\tresource.resource.unsubscribe(invalidator);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresource.resource.destroy(middlewareId);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tidToResourceMap.delete(middlewareId);\n\t\t});\n\t\tdiffProperty(\n\t\t\t'resource',\n\t\t\t(): ResourceMiddlewareProperties<any> => {\n\t\t\t\treturn {} as any;\n\t\t\t},\n\t\t\t({ resource: current }, { resource: next }) => {\n\t\t\t\tif (current && next) {\n\t\t\t\t\tconst id = next.template.id || 'global';\n\t\t\t\t\tconst {\n\t\t\t\t\t\ttemplate: { initOptions: currentInitOptions }\n\t\t\t\t\t} = current;\n\t\t\t\t\tconst {\n\t\t\t\t\t\ttemplate: { initOptions: nextInitOptions }\n\t\t\t\t\t} = next;\n\t\t\t\t\tif (nextInitOptions) {\n\t\t\t\t\t\tconst changed = diffInitOptions(currentInitOptions || {}, nextInitOptions);\n\t\t\t\t\t\tif (changed) {\n\t\t\t\t\t\t\tconst resourceMap = templateToResourceMap.get(next.template.template);\n\t\t\t\t\t\t\tif (resourceMap) {\n\t\t\t\t\t\t\t\tconst resource = resourceMap.get(id);\n\t\t\t\t\t\t\t\tif (resource) {\n\t\t\t\t\t\t\t\t\tresource.init(nextInitOptions);\n\t\t\t\t\t\t\t\t\tinvalidator();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst nextOptions = next.options;\n\t\t\t\t\tconst currOptions = current.options;\n\t\t\t\t\tif (currOptions && currOptions !== nextOptions) {\n\t\t\t\t\t\tconst invalidatorSet = optionInvalidatorMap.get(currOptions.options);\n\t\t\t\t\t\tif (invalidatorSet) {\n\t\t\t\t\t\t\tinvalidatorSet.delete(invalidator);\n\t\t\t\t\t\t\tinvalidator();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (next) {\n\t\t\t\t\tconst nextOptions = next.options;\n\t\t\t\t\tconst currOptions = current && current.options;\n\t\t\t\t\tif (nextOptions) {\n\t\t\t\t\t\tconst options: any = (options?: Partial<ResourceOptions<any>>) => {\n\t\t\t\t\t\t\tconst invalidatorSet = optionInvalidatorMap.get(nextOptions.options) || new Set();\n\t\t\t\t\t\t\tinvalidatorSet.add(invalidator);\n\t\t\t\t\t\t\toptionInvalidatorMap.set(nextOptions.options, invalidatorSet);\n\t\t\t\t\t\t\treturn nextOptions.options(options);\n\t\t\t\t\t\t};\n\t\t\t\t\t\toptions.options = nextOptions.options;\n\t\t\t\t\t\tif (!currOptions || currOptions.options !== nextOptions.options) {\n\t\t\t\t\t\t\tinvalidator();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\ttemplate: next.template\n\t\t\t\t\t\t} as any;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tconst middleware = function(resource: any) {\n\t\t\tif (isTemplate(resource.template)) {\n\t\t\t\tlet { template, transform, initOptions, ...rest } = resource;\n\t\t\t\treturn {\n\t\t\t\t\ttemplate: {\n\t\t\t\t\t\ttemplate,\n\t\t\t\t\t\ttransform,\n\t\t\t\t\t\tid: initOptions ? `${middlewareId}/${initOptions.id}` : 'global',\n\t\t\t\t\t\tinitOptions\n\t\t\t\t\t},\n\t\t\t\t\t...rest\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn resource;\n\t\t};\n\t\tmiddleware.createOptions = (key: string): Options<any> => {\n\t\t\tconst options = optionsMap.get(key);\n\t\t\tif (options) {\n\t\t\t\treturn options;\n\t\t\t}\n\t\t\tconst optionsWrapper = createOptionsWrapper();\n\t\t\tfunction setOptions(options?: Partial<ResourceOptions<any>>) {\n\t\t\t\tconst invalidatorSet = optionInvalidatorMap.get(optionsWrapper.options) || new Set();\n\t\t\t\tinvalidatorSet.add(invalidator);\n\t\t\t\toptionInvalidatorMap.set(optionsWrapper.options, invalidatorSet);\n\t\t\t\treturn optionsWrapper(options);\n\t\t\t}\n\t\t\tsetOptions.options = optionsWrapper.options;\n\t\t\toptionsMap.set(key, setOptions);\n\t\t\treturn setOptions;\n\t\t};\n\t\tmiddleware.getOrRead = (template: any, options: any, init?: any) => {\n\t\t\tconst resource = getResource(template, middlewareId, init);\n\t\t\tconst transform = !isTemplate(template) && template.transform;\n\t\t\tconst resourceOptions = transformOptions(options, transform);\n\t\t\tresource.subscribeRead(invalidator, options);\n\t\t\tconst data = resource.getOrRead(resourceOptions);\n\t\t\tif (data && transform) {\n\t\t\t\treturn data.map((items: any) => {\n\t\t\t\t\tif (items) {\n\t\t\t\t\t\treturn items.map((item: any) => transformData(item, transform));\n\t\t\t\t\t}\n\t\t\t\t\treturn items;\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn data;\n\t\t};\n\t\tmiddleware.find = (template: any, options: any, init?: any) => {\n\t\t\tconst resource = getResource(template, middlewareId, init);\n\t\t\tconst transform = !isTemplate(template) && template.transform;\n\t\t\tconst findOptions = transformOptions(options, transform);\n\t\t\tresource.subscribeFind(invalidator, findOptions);\n\t\t\tconst result = resource.find(findOptions);\n\t\t\tif (result && result.item && transform) {\n\t\t\t\tresult.item = transformData(result.item, transform);\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\n\t\tmiddleware.meta = (template: any, options: any, request = false, init?: any) => {\n\t\t\tconst resource = getResource(template, middlewareId, init);\n\t\t\tconst transform = !isTemplate(template) && template.transform;\n\t\t\tconst resourceOptions = transformOptions(options, transform);\n\t\t\tresource.subscribeMeta(invalidator, resourceOptions);\n\t\t\tif (request) {\n\t\t\t\tresource.subscribeRead(invalidator, resourceOptions);\n\t\t\t}\n\t\t\treturn resource.meta(resourceOptions, request);\n\t\t};\n\t\tmiddleware.isLoading = (template: any, options: any, init?: any) => {\n\t\t\tconst resource = getResource(template, middlewareId, init);\n\t\t\tconst transform = !isTemplate(template) && template.transform;\n\t\t\tconst resourceOptions = transformOptions(options, transform);\n\t\t\tresource.subscribeLoading(invalidator, resourceOptions);\n\t\t\treturn resource.isLoading(resourceOptions);\n\t\t};\n\t\tmiddleware.isFailed = (template: any, options: any, init?: any) => {\n\t\t\tconst resource = getResource(template, middlewareId, init);\n\t\t\tconst transform = !isTemplate(template) && template.transform;\n\t\t\tconst resourceOptions = transformOptions(options, transform);\n\t\t\tresource.subscribeFailed(invalidator, resourceOptions);\n\t\t\treturn resource.isFailed(resourceOptions);\n\t\t};\n\t\treturn middleware;\n\t}\n);\n\nexport function createResourceMiddleware<MIDDLEWARE = void>() {\n\treturn resourceMiddlewareFactory.withType<\n\t\tResourceMiddleware<MIDDLEWARE>,\n\t\tMIDDLEWARE extends void ? {} : ResourceMiddlewareProperties<MIDDLEWARE>\n\t>();\n}\n"]}