export declare const block: import("../interfaces").MiddlewareResultFactory<import("../interfaces").WidgetProperties, import("../interfaces").DNode<any>[], {
    defer: import("../interfaces").MiddlewareResultFactory<import("../interfaces").WidgetProperties, import("../interfaces").DNode<any>[], import("../interfaces").MiddlewareMap<() => {
        api: {};
        properties: {};
    }>, {
        pause(): void;
        resume(): void;
    }>;
    icache: import("../interfaces").MiddlewareResultFactory<import("../interfaces").WidgetProperties, import("../interfaces").DNode<any>[], {
        invalidator: import("../interfaces").MiddlewareResultFactory<import("../interfaces").WidgetProperties, import("../interfaces").DNode<any>[], import("../interfaces").MiddlewareMap<() => {
            api: {};
            properties: {};
        }>, () => void>;
        destroy: import("../interfaces").MiddlewareResultFactory<import("../interfaces").WidgetProperties, import("../interfaces").DNode<any>[], import("../interfaces").MiddlewareMap<() => {
            api: {};
            properties: {};
        }>, (destroyFunction: () => void) => void>;
    }, import("./icache").ICacheResult<void>>;
}, <T extends (...args: any[]) => any>(module: T) => (...args: Parameters<T>) => (ReturnType<T> extends Promise<infer U> ? U : ReturnType<T>) | null>;
export default block;
