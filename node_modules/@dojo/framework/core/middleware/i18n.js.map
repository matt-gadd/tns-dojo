{"version":3,"file":"i18n.js","sourceRoot":"","sources":["i18n.ts"],"names":[],"mappings":"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","sourcesContent":["import { localizeBundle, Bundle, Messages, setLocale, getCurrentLocale } from '../../i18n/i18n';\nimport { create, invalidator, getRegistry, diffProperty } from '../vdom';\nimport injector from './injector';\nimport { I18nProperties, LocalizedMessages, LocaleData } from '../interfaces';\nimport { isThenable } from '../../shim/Promise';\nimport I18nInjector, { INJECTOR_KEY, registerI18nInjector } from '../I18nInjector';\n\nexport { INJECTOR_KEY, registerI18nInjector } from '../I18nInjector';\n\nconst factory = create({ invalidator, injector, getRegistry, diffProperty }).properties<I18nProperties>();\n\nexport const i18n = factory(({ properties, middleware: { invalidator, injector, getRegistry, diffProperty } }) => {\n\tconst i18nInjector = injector.get(INJECTOR_KEY);\n\tif (!i18nInjector) {\n\t\tconst registry = getRegistry();\n\t\tif (registry) {\n\t\t\tregisterI18nInjector({}, registry.base);\n\t\t}\n\t}\n\n\tdiffProperty('locale', properties, (current, next) => {\n\t\tconst localeDataInjector = injector.get<I18nInjector>(INJECTOR_KEY);\n\t\tlet injectedLocale: string | undefined;\n\t\tif (localeDataInjector) {\n\t\t\tconst injectLocaleData = localeDataInjector.get();\n\t\t\tif (injectLocaleData) {\n\t\t\t\tinjectedLocale = injectLocaleData.locale;\n\t\t\t}\n\t\t}\n\t\tif (next.locale && current.locale !== next.locale) {\n\t\t\tconst result = setLocale({ locale: next.locale, local: true });\n\t\t\tif (isThenable(result)) {\n\t\t\t\tresult.then(() => {\n\t\t\t\t\tinvalidator();\n\t\t\t\t});\n\t\t\t\treturn current.locale || injectedLocale || getCurrentLocale();\n\t\t\t}\n\t\t}\n\t\tif (current.locale !== next.locale) {\n\t\t\tinvalidator();\n\t\t}\n\t\treturn next.locale || injectedLocale || getCurrentLocale();\n\t});\n\n\tinjector.subscribe(INJECTOR_KEY);\n\n\treturn {\n\t\tlocalize<T extends Messages>(bundle: Bundle<T>): LocalizedMessages<T> {\n\t\t\tlet { locale, i18nBundle } = properties();\n\t\t\tif (i18nBundle) {\n\t\t\t\tif (i18nBundle instanceof Map) {\n\t\t\t\t\tbundle = i18nBundle.get(bundle) || bundle;\n\t\t\t\t} else {\n\t\t\t\t\tbundle = i18nBundle as Bundle<T>;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn localizeBundle(bundle, { locale, invalidator });\n\t\t},\n\t\tset(localeData: LocaleData = {}) {\n\t\t\tconst localeDataInjector = injector.get<I18nInjector>(INJECTOR_KEY);\n\t\t\tif (localeDataInjector) {\n\t\t\t\tlocaleDataInjector.set(localeData);\n\t\t\t}\n\t\t},\n\t\tget() {\n\t\t\tconst localeDataInjector = injector.get<I18nInjector>(INJECTOR_KEY);\n\t\t\tif (localeDataInjector) {\n\t\t\t\treturn localeDataInjector.get();\n\t\t\t}\n\t\t}\n\t};\n});\n\nexport default i18n;\n"]}