{"version":3,"file":"block.js","sourceRoot":"","sources":["block.ts"],"names":[],"mappings":";;;;;;;;;;IAAA,iBA2BA;;;IA3BA,gCAAkF;IAClF,mCAA8B;IAE9B,IAAM,YAAY,GAAG,aAAM,CAAC,EAAE,KAAK,cAAA,EAAE,MAAM,kBAAA,EAAE,CAAC,CAAC;IAElC,QAAA,KAAK,GAAG,YAAY,CAAC,UAAC,EAAiC;YAA/B,kBAA6B,EAAf,kBAAM,EAAE,gBAAK;QAC/D,IAAI,EAAE,GAAG,CAAC,CAAC;QACX,OAAO,UAAoC,MAAS;YACnD,OAAO;gBAAC,cAAsB;qBAAtB,UAAsB,EAAtB,qBAAsB,EAAtB,IAAsB;oBAAtB,yBAAsB;;gBAC7B,IAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACxC,IAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC;gBAC5C,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;gBACpC,IAAM,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAI,QAAQ,SAAI,UAAY,EAAE;;;;;gCAChE,0BAAmB,EAAE,CAAC;gCAChB,GAAG,GAAG,MAAM,gCAAI,IAAI,EAAC,CAAC;gCAC5B,KAAK,CAAC,KAAK,EAAE,CAAC;gCACC,qBAAM,GAAG,EAAA;;gCAAlB,MAAM,GAAG,SAAS;gCACxB,0BAAmB,EAAE,CAAC;gCACtB,KAAK,CAAC,MAAM,EAAE,CAAC;gCACf,sBAAO,MAAM,EAAC;;;qBACd,CAAC,CAAC;gBACH,OAAO,WAAW,IAAI,IAAI,CAAC;YAC5B,CAAC,CAAC;QACH,CAAC,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,kBAAe,aAAK,CAAC","sourcesContent":["import { create, defer, decrementBlockCount, incrementBlockCount } from '../vdom';\nimport icache from './icache';\n\nconst blockFactory = create({ defer, icache });\n\nexport const block = blockFactory(({ middleware: { icache, defer } }) => {\n\tlet id = 1;\n\treturn <T extends (...args: any[]) => any>(module: T) => {\n\t\treturn (...args: Parameters<T>): (ReturnType<T> extends Promise<infer U> ? U : ReturnType<T>) | null => {\n\t\t\tconst argsString = JSON.stringify(args);\n\t\t\tconst moduleId = icache.get(module) || id++;\n\t\t\ticache.set(module, moduleId, false);\n\t\t\tconst cachedValue = icache.getOrSet(`${moduleId}-${argsString}`, async () => {\n\t\t\t\tincrementBlockCount();\n\t\t\t\tconst run = module(...args);\n\t\t\t\tdefer.pause();\n\t\t\t\tconst result = await run;\n\t\t\t\tdecrementBlockCount();\n\t\t\t\tdefer.resume();\n\t\t\t\treturn result;\n\t\t\t});\n\t\t\treturn cachedValue || null;\n\t\t};\n\t};\n});\n\nexport default block;\n"]}