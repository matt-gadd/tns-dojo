{"version":3,"file":"drag.mjs","sourceRoot":"","sources":["drag.ts"],"names":[],"mappings":"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","sourcesContent":["import global from '../../shim/global';\nimport { assign } from '../../shim/object';\nimport { create, destroy, invalidator, node } from '../vdom';\nimport icache from './icache';\n\n/**\n * Results from a drag operation\n */\nexport interface DragResults {\n\t/**\n\t * The movement of pointer during the duration of the drag state\n\t */\n\tdelta: Position;\n\n\t/**\n\t * Is the DOM node currently in a drag state\n\t */\n\tisDragging: boolean;\n\n\t/**\n\t * A matrix of posistions that represent the start position for the current drag interaction\n\t */\n\tstart?: PositionMatrix;\n}\n\n/**\n * An x/y position structure\n */\nexport interface Position {\n\t/** Horizontal coordinate */\n\tx: number;\n\n\t/** Vertical coordinate */\n\ty: number;\n}\n\n/**\n * A matrix of x/y positions\n */\nexport interface PositionMatrix {\n\t/**\n\t * Client x/y position\n\t */\n\tclient: Position;\n\n\t/**\n\t * Offset x/y position\n\t */\n\toffset: Position;\n\n\t/**\n\t * Page x/y position\n\t */\n\tpage: Position;\n\n\t/**\n\t * Screen x/y position\n\t */\n\tscreen: Position;\n}\n\ninterface NodeData {\n\tdragResults: DragResults;\n\tlast: PositionMatrix;\n\tstart: PositionMatrix;\n}\n\nfunction getDelta(start: PositionMatrix, current: PositionMatrix): Position {\n\treturn {\n\t\tx: current.client.x - start.client.x,\n\t\ty: current.client.y - start.client.y\n\t};\n}\n\nfunction createNodeData(): NodeData {\n\treturn {\n\t\tdragResults: { ...emptyResults },\n\t\tlast: createPositionMatrix(),\n\t\tstart: createPositionMatrix()\n\t};\n}\n\nfunction createPosition(): Position {\n\treturn { x: 0, y: 0 };\n}\n\nfunction createPositionMatrix(): PositionMatrix {\n\treturn {\n\t\tclient: { x: 0, y: 0 },\n\t\toffset: { x: 0, y: 0 },\n\t\tpage: { x: 0, y: 0 },\n\t\tscreen: { x: 0, y: 0 }\n\t};\n}\n\nfunction getPositionMatrix(event: PointerEvent): PositionMatrix {\n\treturn {\n\t\tclient: {\n\t\t\tx: event.clientX,\n\t\t\ty: event.clientY\n\t\t},\n\t\toffset: {\n\t\t\tx: event.offsetX,\n\t\t\ty: event.offsetY\n\t\t},\n\t\tpage: {\n\t\t\tx: event.pageX,\n\t\t\ty: event.pageY\n\t\t},\n\t\tscreen: {\n\t\t\tx: event.screenX,\n\t\t\ty: event.screenY\n\t\t}\n\t};\n}\n\nfunction initNode(node: HTMLElement): void {\n\tnode.style.touchAction = 'none';\n\tnode.setAttribute('touch-action', 'none');\n}\n\nconst emptyResults = Object.freeze({\n\tdelta: Object.freeze(createPosition()),\n\tisDragging: false\n});\n\nconst factory = create({ destroy, icache, invalidator, node });\n\nexport const drag = factory(({ middleware: { destroy, icache, invalidator, node } }) => {\n\tlet nodeMap = new WeakMap<HTMLElement, NodeData>();\n\n\tfunction getData(target: HTMLElement): { state: NodeData; target: HTMLElement } | undefined {\n\t\tconst state = nodeMap.get(target);\n\t\tif (state) {\n\t\t\treturn { state, target };\n\t\t}\n\t}\n\n\tfunction onDragStart(event: PointerEvent) {\n\t\tconst dragging = icache.get<HTMLElement>('dragging');\n\t\tif (!event.isPrimary && dragging) {\n\t\t\tconst state = nodeMap.get(dragging)!;\n\t\t\tstate.dragResults.isDragging = false;\n\t\t\ticache.set('dragging', undefined);\n\t\t\treturn;\n\t\t}\n\t\tif (event.button !== 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst data = getData(event.target as HTMLElement);\n\t\tif (data) {\n\t\t\tconst { state, target } = data;\n\t\t\ticache.set('dragging', target);\n\t\t\tstate.last = state.start = getPositionMatrix(event);\n\t\t\tstate.dragResults.delta = createPosition();\n\t\t\tstate.dragResults.start = { ...state.start };\n\t\t\tstate.dragResults.isDragging = true;\n\t\t\tinvalidator();\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t}\n\t}\n\n\tfunction onDrag(event: PointerEvent) {\n\t\tconst dragging = icache.get<HTMLElement>('dragging');\n\t\tif (!dragging) {\n\t\t\treturn;\n\t\t}\n\t\t// state cannot be unset, using ! operator\n\t\tconst state = nodeMap.get(dragging)!;\n\t\tstate.last = getPositionMatrix(event);\n\t\tstate.dragResults.delta = getDelta(state.start, state.last);\n\t\tinvalidator();\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t}\n\n\tfunction onDragStop(event: PointerEvent) {\n\t\tconst dragging = icache.get<HTMLElement>('dragging');\n\t\tif (!dragging) {\n\t\t\treturn;\n\t\t}\n\t\t// state cannot be unset, using ! operator\n\t\tconst state = nodeMap.get(dragging)!;\n\t\tstate.last = getPositionMatrix(event);\n\t\tstate.dragResults.delta = getDelta(state.start, state.last);\n\t\tstate.dragResults.isDragging = false;\n\t\ticache.set('dragging', undefined);\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t}\n\n\tconst win: Window = global;\n\twin.addEventListener('pointerdown', onDragStart);\n\twin.addEventListener('pointermove', onDrag, true);\n\twin.addEventListener('pointerup', onDragStop, true);\n\n\tdestroy(() => {\n\t\tconst win: Window = global;\n\t\twin.removeEventListener('pointerdown', onDragStart);\n\t\twin.removeEventListener('pointermove', onDrag, true);\n\t\twin.removeEventListener('pointerup', onDragStop, true);\n\t\tnodeMap = new WeakMap();\n\t});\n\n\treturn {\n\t\tget(key: string | number): Readonly<DragResults> {\n\t\t\tconst domNode = node.get(key);\n\n\t\t\tif (!domNode) {\n\t\t\t\treturn emptyResults;\n\t\t\t}\n\n\t\t\tif (!nodeMap.has(domNode)) {\n\t\t\t\tnodeMap.set(domNode, createNodeData());\n\t\t\t\tinitNode(domNode);\n\t\t\t\treturn emptyResults;\n\t\t\t}\n\n\t\t\tconst state = nodeMap.get(domNode)!;\n\t\t\tconst dragResults = assign({}, state.dragResults);\n\t\t\tstate.start = state.last;\n\t\t\tstate.dragResults.delta = createPosition();\n\t\t\tdelete state.dragResults.start;\n\n\t\t\treturn dragResults;\n\t\t}\n\t};\n});\n\nexport default drag;\n"]}