{"version":3,"file":"i18n.mjs","sourceRoot":"","sources":["i18n.ts"],"names":[],"mappings":"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","sourcesContent":["import { localizeBundle, Bundle, Messages, setLocale, getCurrentLocale } from '../../i18n/i18n';\nimport { create, invalidator, getRegistry, diffProperty } from '../vdom';\nimport injector from './injector';\nimport { I18nProperties, LocalizedMessages, LocaleData } from '../interfaces';\nimport { isThenable } from '../../shim/Promise';\nimport I18nInjector, { INJECTOR_KEY, registerI18nInjector } from '../I18nInjector';\n\nexport { INJECTOR_KEY, registerI18nInjector } from '../I18nInjector';\n\nconst factory = create({ invalidator, injector, getRegistry, diffProperty }).properties<I18nProperties>();\n\nexport const i18n = factory(({ properties, middleware: { invalidator, injector, getRegistry, diffProperty } }) => {\n\tconst i18nInjector = injector.get(INJECTOR_KEY);\n\tif (!i18nInjector) {\n\t\tconst registry = getRegistry();\n\t\tif (registry) {\n\t\t\tregisterI18nInjector({}, registry.base);\n\t\t}\n\t}\n\n\tdiffProperty('locale', properties, (current, next) => {\n\t\tconst localeDataInjector = injector.get<I18nInjector>(INJECTOR_KEY);\n\t\tlet injectedLocale: string | undefined;\n\t\tif (localeDataInjector) {\n\t\t\tconst injectLocaleData = localeDataInjector.get();\n\t\t\tif (injectLocaleData) {\n\t\t\t\tinjectedLocale = injectLocaleData.locale;\n\t\t\t}\n\t\t}\n\t\tif (next.locale && current.locale !== next.locale) {\n\t\t\tconst result = setLocale({ locale: next.locale, local: true });\n\t\t\tif (isThenable(result)) {\n\t\t\t\tresult.then(() => {\n\t\t\t\t\tinvalidator();\n\t\t\t\t});\n\t\t\t\treturn current.locale || injectedLocale || getCurrentLocale();\n\t\t\t}\n\t\t}\n\t\tif (current.locale !== next.locale) {\n\t\t\tinvalidator();\n\t\t}\n\t\treturn next.locale || injectedLocale || getCurrentLocale();\n\t});\n\n\tinjector.subscribe(INJECTOR_KEY);\n\n\treturn {\n\t\tlocalize<T extends Messages>(bundle: Bundle<T>): LocalizedMessages<T> {\n\t\t\tlet { locale, i18nBundle } = properties();\n\t\t\tif (i18nBundle) {\n\t\t\t\tif (i18nBundle instanceof Map) {\n\t\t\t\t\tbundle = i18nBundle.get(bundle) || bundle;\n\t\t\t\t} else {\n\t\t\t\t\tbundle = i18nBundle as Bundle<T>;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn localizeBundle(bundle, { locale, invalidator });\n\t\t},\n\t\tset(localeData: LocaleData = {}) {\n\t\t\tconst localeDataInjector = injector.get<I18nInjector>(INJECTOR_KEY);\n\t\t\tif (localeDataInjector) {\n\t\t\t\tlocaleDataInjector.set(localeData);\n\t\t\t}\n\t\t},\n\t\tget() {\n\t\t\tconst localeDataInjector = injector.get<I18nInjector>(INJECTOR_KEY);\n\t\t\tif (localeDataInjector) {\n\t\t\t\treturn localeDataInjector.get();\n\t\t\t}\n\t\t}\n\t};\n});\n\nexport default i18n;\n"]}