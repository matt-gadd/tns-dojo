{"version":3,"file":"resources.mjs","sourceRoot":"","sources":["resources.ts"],"names":[],"mappings":"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","sourcesContent":["import Map from '../../shim/Map';\nimport Set from '../../shim/Set';\nimport { create, diffProperty, invalidator, destroy } from '../vdom';\nimport { Invalidator } from '../interfaces';\nimport { isThenable } from '../../shim/Promise';\nimport { auto } from '../diff';\n\n// Resource General\n\ntype SubscriptionType = 'read' | 'find' | 'meta' | 'loading' | 'failed';\ntype InvalidatorMaps = { [key in SubscriptionType]: Map<string, Set<Invalidator>> };\ntype StatusType = 'LOADING' | 'FAILED';\ntype ResourceQuery<S> = { [P in keyof S]?: any };\ntype TransformConfig<T, S = void> = { [P in keyof T]: S extends void ? string : keyof S };\ninterface ResourceOptions<S> {\n\tpage: number | number[];\n\tsize: number;\n\tquery: ResourceQuery<S>;\n}\ninterface Options<S> {\n\t(options?: Partial<ResourceOptions<S>>): ResourceOptions<S>;\n\toptions: any;\n}\nexport interface ResourceFindOptions<S> {\n\toptions: ResourceOptions<S>;\n\tquery: ResourceQuery<S>;\n\tstart: number;\n\ttype?: string;\n}\n\nexport interface ResourceInitOptions {\n\tid: string;\n}\n\n// Resource Template\n\nexport interface ResourceReadRequest<RESOURCE> {\n\toffset: number;\n\tsize: number;\n\tquery: ResourceQuery<RESOURCE>;\n}\nexport interface ResourceReadResponse<RESOURCE> {\n\tdata: RESOURCE[];\n\ttotal: number;\n}\nexport interface ResourceFindRequest<RESOURCE> {\n\toptions: ResourceOptions<RESOURCE>;\n\tquery: ResourceQuery<RESOURCE>;\n\tstart: number;\n\ttype: string;\n}\nexport interface ResourceFindResponse<RESOURCE> {\n\titem: RESOURCE;\n\tindex: number;\n}\n\nexport interface ResourceFindResult<RESOURCE> {\n\titem: RESOURCE;\n\tpage: number;\n\tindex: number;\n\tpageIndex: number;\n}\n\nexport interface ResourceMeta {\n\ttotal: number | undefined;\n}\n\nexport interface ResourceGet<RESOURCE> {\n\t(request?: Partial<ResourceReadRequest<RESOURCE>>): ResourceReadResponse<RESOURCE>;\n}\nexport interface ResourcePut<RESOURCE> {\n\t(readResponse: ResourceReadResponse<RESOURCE>, readRequest: ResourceReadRequest<RESOURCE>): void;\n\t(findResponse: ResourceFindResponse<RESOURCE> | undefined, findRequest: ResourceFindRequest<RESOURCE>): void;\n}\nexport interface ResourceControls<RESOURCE> {\n\tget: ResourceGet<RESOURCE>;\n\tput: ResourcePut<RESOURCE>;\n}\nexport interface ResourceRead<RESOURCE> {\n\t(request: ResourceReadRequest<RESOURCE>, controls: ResourceControls<RESOURCE>): void | Promise<void>;\n}\nexport interface ResourceFind<RESOURCE> {\n\t(options: ResourceFindRequest<RESOURCE>, controls: ResourceControls<RESOURCE>): void | Promise<void>;\n}\n\ninterface BaseResourceInitRequest {\n\tid: string;\n}\n\nexport interface ResourceInit<RESOURCE, INIT> {\n\t(request: BaseResourceInitRequest & INIT, controls: ResourceControls<RESOURCE>): void;\n}\n\ninterface ResourceTemplate<RESOURCE = {}, MIDDLEWARE = {}> {\n\tread: ResourceRead<RESOURCE>;\n\tfind: ResourceFind<RESOURCE>;\n}\n\ninterface ResourceTemplateWithInit<RESOURCE = {}, INIT = any, MIDDLEWARE = {}> {\n\tinit: ResourceInit<RESOURCE, INIT>;\n\tread: ResourceRead<RESOURCE>;\n\tfind: ResourceFind<RESOURCE>;\n}\n\n// Resource Interfaces\n\nexport interface Resource<S = {}> {\n\tfind(options: ResourceFindOptions<S>): ResourceFindResult<S> | undefined;\n\tgetOrRead(options: ResourceOptions<S>): (undefined | S[])[];\n\tmeta(options: ResourceOptions<S>, read: boolean): ResourceMeta | undefined;\n\tisLoading(options: ResourceOptions<S> | ResourceFindOptions<S>): boolean;\n\tisFailed(options: ResourceOptions<S>): boolean;\n\tsubscribeFind(invalidator: Invalidator, options: ResourceFindOptions<S>): void;\n\tsubscribeRead(invalidator: Invalidator, options: ResourceOptions<S>): void;\n\tsubscribeMeta(invalidator: Invalidator, options: ResourceOptions<S>): void;\n\tsubscribeLoading(invalidator: Invalidator, options: ResourceOptions<S> | ResourceFindOptions<S>): void;\n\tsubscribeFailed(invalidator: Invalidator, options: ResourceOptions<S> | ResourceFindOptions<S>): void;\n\tunsubscribe(invalidator: Invalidator): void;\n\tinit(initOptions: ResourceInitOptions, requireDiff?: boolean): void;\n\tdestroy(id: string): void;\n}\n\nexport type ResourceProperty<MIDDLEWARE> = MIDDLEWARE extends infer RESOURCE\n\t? {\n\t\t\ttemplate: {\n\t\t\t\ttemplate: ResourceTemplate<RESOURCE, MIDDLEWARE>;\n\t\t\t\ttransform?: TransformConfig<MIDDLEWARE, any>;\n\t\t\t\tinitOptions?: ResourceInitOptions;\n\t\t\t\tid?: string;\n\t\t\t};\n\t\t\toptions?: Options<MIDDLEWARE>;\n\t  }\n\t: any;\n\nexport interface ResourceMiddlewareProperties<MIDDLEWARE> {\n\tresource: ResourceProperty<MIDDLEWARE>;\n}\n\ninterface ResourceTemplateWrapper<RESOURCE = {}, MIDDLEWARE = {}> {\n\ttemplate: ResourceTemplate<RESOURCE, any>;\n\ttransform?: TransformConfig<{ [P in keyof MIDDLEWARE]: {} }, RESOURCE>;\n\tinitOptions?: ResourceInitOptions;\n\tid?: string;\n}\n\n// Resource Middleware Interfaces\n\ninterface ResourceMiddleware<MIDDLEWARE = {}> {\n\t<RESOURCE>(\n\t\toptions: {\n\t\t\ttemplate: ResourceTemplate<RESOURCE, MIDDLEWARE>;\n\t\t\toptions?: Options<{}>;\n\t\t}\n\t): {\n\t\ttemplate: {\n\t\t\ttemplate: ResourceTemplate<RESOURCE, MIDDLEWARE>;\n\t\t};\n\t\toptions: Options<{}>;\n\t\ttransform?: any;\n\t};\n\t<RESOURCE, MIDDLEWARE>(\n\t\toptions: {\n\t\t\ttemplate: ResourceTemplate<RESOURCE, any>;\n\t\t\ttransform: TransformConfig<MIDDLEWARE, RESOURCE>;\n\t\t\toptions?: Options<{}>;\n\t\t}\n\t): {\n\t\ttemplate: {\n\t\t\ttemplate: ResourceTemplate<any, any>;\n\t\t\ttransform: TransformConfig<MIDDLEWARE, RESOURCE>;\n\t\t};\n\t\toptions: Options<{}>;\n\t};\n\t<RESOURCE, INIT, DATA extends RESOURCE>(\n\t\toptions: {\n\t\t\ttemplate: ResourceTemplateWithInit<RESOURCE, INIT, MIDDLEWARE>;\n\t\t\tinitOptions: INIT & { id: string };\n\t\t\toptions?: Options<{}>;\n\t\t}\n\t): {\n\t\ttemplate: {\n\t\t\ttemplate: ResourceTemplateWithInit<RESOURCE, INIT, MIDDLEWARE>;\n\t\t};\n\t\toptions: Options<{}>;\n\t\ttransform?: any;\n\t};\n\t<RESOURCE, INIT, MIDDLEWARE, DATA extends RESOURCE>(\n\t\toptions: {\n\t\t\ttemplate: ResourceTemplateWithInit<RESOURCE, INIT, any>;\n\t\t\ttransform: TransformConfig<MIDDLEWARE, RESOURCE>;\n\t\t\tinitOptions: INIT & { id: string };\n\t\t\toptions?: Options<{}>;\n\t\t}\n\t): {\n\t\ttemplate: {\n\t\t\ttemplate: ResourceTemplateWithInit<any, INIT, any>;\n\t\t\ttransform: TransformConfig<MIDDLEWARE, RESOURCE>;\n\t\t};\n\t\toptions: Options<{}>;\n\t};\n\t<RESOURCE, MIDDLEWARE>(\n\t\toptions: {\n\t\t\ttemplate: ResourceTemplateWrapper<RESOURCE, MIDDLEWARE>;\n\t\t\toptions: Options<{}>;\n\t\t}\n\t): {\n\t\ttemplate: {\n\t\t\ttemplate: ResourceTemplate<any, any>;\n\t\t\ttransform: TransformConfig<MIDDLEWARE, RESOURCE>;\n\t\t};\n\t\toptions: Options<{}>;\n\t};\n\tcreateOptions(id: string): Options<{}>;\n\tgetOrRead<RESOURCE>(\n\t\ttemplate: ResourceTemplate<RESOURCE> & { type: 'standard' },\n\t\toptions: ResourceOptions<any>\n\t): RESOURCE[][];\n\tgetOrRead<RESOURCE, INIT>(\n\t\ttemplate: ResourceTemplateWithInit<RESOURCE, INIT> & { type: 'init' },\n\t\toptions: ResourceOptions<any>,\n\t\tinitOptions: INIT & { id: string }\n\t): RESOURCE[][];\n\tgetOrRead<T extends ResourceTemplate<any, any>>(\n\t\ttemplate: {\n\t\t\ttemplate: T;\n\t\t\ttransform?: any;\n\t\t\tdata?: any;\n\t\t},\n\t\toptions: ResourceOptions<any>\n\t): T extends ResourceTemplate<infer RESOURCE> ? RESOURCE[][] : void;\n\tfind<RESOURCE>(\n\t\ttemplate: ResourceTemplate<RESOURCE> & { type: 'standard' },\n\t\toptions: ResourceFindOptions<any>\n\t): ResourceFindResult<RESOURCE> | undefined;\n\tfind<RESOURCE, INIT>(\n\t\ttemplate: ResourceTemplateWithInit<RESOURCE, INIT> & { type: 'init' },\n\t\toptions: ResourceFindOptions<any>,\n\t\tinitOptions: INIT & { id: string }\n\t): ResourceFindResult<RESOURCE> | undefined;\n\tfind<T extends ResourceTemplate<any, any>>(\n\t\ttemplate: {\n\t\t\ttemplate: T;\n\t\t\ttransform?: any;\n\t\t\tdata?: any;\n\t\t},\n\t\toptions: ResourceFindOptions<any>\n\t): T extends ResourceTemplate<infer RESOURCE> ? ResourceFindResult<RESOURCE> | undefined : void;\n\tmeta<RESOURCE>(\n\t\ttemplate: ResourceTemplate<RESOURCE> & { type: 'standard' },\n\t\toptions: ResourceOptions<any>,\n\t\trequest?: boolean\n\t): ResourceMeta | undefined;\n\tmeta<RESOURCE, INIT>(\n\t\ttemplate: ResourceTemplateWithInit<RESOURCE, INIT> & { type: 'init' },\n\t\toptions: ResourceOptions<any>,\n\t\tinitOptions: INIT & { id: string },\n\t\trequest?: boolean\n\t): ResourceMeta | undefined;\n\tmeta<T extends ResourceTemplate<any, any>>(\n\t\ttemplate: {\n\t\t\ttemplate: T;\n\t\t\ttransform?: any;\n\t\t\tdata?: any;\n\t\t},\n\t\toptions: ResourceOptions<any>,\n\t\trequest?: boolean\n\t): ResourceMeta | undefined;\n\tisLoading<RESOURCE>(\n\t\ttemplate: ResourceTemplate<RESOURCE> & { type: 'standard' },\n\t\toptions: ResourceOptions<any> | ResourceFindOptions<any>\n\t): boolean;\n\tisLoading<RESOURCE, INIT>(\n\t\ttemplate: ResourceTemplateWithInit<RESOURCE, INIT> & { type: 'init' },\n\t\toptions: ResourceOptions<any> | ResourceFindOptions<any>,\n\t\tinitOptions: INIT & { id: string }\n\t): boolean;\n\tisLoading<T extends ResourceTemplate<any, any>>(\n\t\ttemplate: {\n\t\t\ttemplate: T;\n\t\t\ttransform?: any;\n\t\t\tdata?: any;\n\t\t},\n\t\toptions: ResourceOptions<any> | ResourceFindOptions<any>\n\t): boolean;\n\tisFailed<RESOURCE>(\n\t\ttemplate: ResourceTemplate<RESOURCE> & { type: 'standard' },\n\t\toptions: ResourceOptions<any> | ResourceFindOptions<any>\n\t): boolean;\n\tisFailed<RESOURCE, INIT>(\n\t\ttemplate: ResourceTemplateWithInit<RESOURCE, INIT> & { type: 'init' },\n\t\toptions: ResourceOptions<any> | ResourceFindOptions<any>,\n\t\tinitOptions: INIT & { id: string }\n\t): boolean;\n\tisFailed<T extends ResourceTemplate<any, any>>(\n\t\ttemplate: {\n\t\t\ttemplate: T;\n\t\t\ttransform?: any;\n\t\t\tdata?: any;\n\t\t},\n\t\toptions: ResourceOptions<any> | ResourceFindOptions<any>\n\t): boolean;\n}\n\nexport function createResourceTemplate<RESOURCE = void>(\n\ttemplate: ResourceTemplate<RESOURCE>\n): ResourceTemplate<RESOURCE> & { type: 'standard' } {\n\treturn template as ResourceTemplate<RESOURCE> & { type: 'standard' };\n}\n\nexport function createResourceTemplateWithInit<RESOURCE = void, INIT = never>(\n\ttemplate: ResourceTemplateWithInit<RESOURCE, INIT>\n): ResourceTemplateWithInit<RESOURCE, INIT> & { type: 'init' } {\n\treturn template as ResourceTemplateWithInit<RESOURCE, INIT> & { type: 'init' };\n}\n\nexport function createMemoryResourceTemplate<RESOURCE = void>(): ResourceTemplateWithInit<\n\tRESOURCE,\n\t{ data: RESOURCE[] }\n> & { type: 'init' } {\n\treturn { ...memoryTemplate } as ResourceTemplateWithInit<RESOURCE, { data: RESOURCE[] }> & { type: 'init' };\n}\n\nexport function defaultFilter(query: ResourceQuery<any>, item: any, type: string = 'contains') {\n\tconst queryKeys = Object.keys(query);\n\tfor (let i = 0; i < queryKeys.length; i++) {\n\t\tconst queryKey = queryKeys[i];\n\t\tconst value = query[queryKeys[i]];\n\t\tif (value) {\n\t\t\tconst itemValue = item[queryKey];\n\t\t\tlet result = true;\n\t\t\tif (typeof itemValue === 'string' && typeof value === 'string' && type !== 'exact') {\n\t\t\t\tif (type === 'contains') {\n\t\t\t\t\tresult = item[queryKey].toLowerCase().indexOf(value.toLowerCase()) !== -1;\n\t\t\t\t} else {\n\t\t\t\t\tresult = item[queryKey].toLowerCase().indexOf(value.toLowerCase()) === 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult = value === item[queryKey];\n\t\t\t}\n\t\t\tif (!result) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nexport function defaultFind(request: ResourceFindRequest<any>, { put, get }: ResourceControls<any>) {\n\tconst { type, options } = request;\n\tconst { query } = options;\n\tconst { data } = get({ query });\n\tlet found: ResourceFindResponse<any> | undefined;\n\tfor (let i = 0; i < data.length; i++) {\n\t\tconst item = data[i];\n\t\tif (item && defaultFilter(request.query, item, type)) {\n\t\t\tif (!found || i >= request.start) {\n\t\t\t\tfound = {\n\t\t\t\t\titem,\n\t\t\t\t\tindex: i\n\t\t\t\t};\n\t\t\t\tif (i >= request.start) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tput(found, request);\n}\n\nexport const memoryTemplate: ResourceTemplateWithInit<any, { data: any }> = Object.freeze({\n\tinit: ({ data }, { put }) => {\n\t\tput({ data, total: data.length }, { offset: 0, size: 30, query: {} });\n\t},\n\tread: (request, { get, put }) => {\n\t\tconst { data } = get();\n\t\tconst { offset, size } = request;\n\t\tconst filteredData = Object.keys(request.query).length\n\t\t\t? data.filter((item) => item && defaultFilter(request.query, item, 'contains'))\n\t\t\t: data;\n\t\tput({ data: filteredData.slice(offset, offset + size), total: filteredData.length }, request);\n\t},\n\tfind: (request, { get, put }) => {\n\t\tconst { type, options } = request;\n\t\tconst { query } = options;\n\t\tlet { data } = get({ query });\n\t\tif (!data.length) {\n\t\t\tdata = get().data.filter((item) => defaultFilter(query, item));\n\t\t}\n\t\tlet found: ResourceFindResponse<any> | undefined;\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tconst item = data[i];\n\t\t\tif (item && defaultFilter(request.query, item, type)) {\n\t\t\t\tif (!found || i >= request.start) {\n\t\t\t\t\tfound = {\n\t\t\t\t\t\titem,\n\t\t\t\t\t\tindex: i\n\t\t\t\t\t};\n\t\t\t\t\tif (i >= request.start) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tput(found, request);\n\t}\n});\n\nfunction getMetaKey({ query, size }: ResourceOptions<any>) {\n\treturn `size-${size}-query-${JSON.stringify(query)}`;\n}\n\nfunction getFindKey(findOptions: ResourceFindOptions<any>) {\n\tconst { options, ...find } = getFindOptions(findOptions);\n\treturn `size-${options.size}-query-${JSON.stringify(options.query)}-find-${JSON.stringify(find)}`;\n}\n\nfunction getReadKey({ page, size, query }: ResourceOptions<any>): string {\n\treturn `page-${JSON.stringify(page)}-size-${size}-query-${JSON.stringify(query)}`;\n}\n\nfunction getDataKey({ query = {} }: Partial<ResourceOptions<any>> | Partial<ResourceReadRequest<any>> = {}): string {\n\treturn `${JSON.stringify(query)}`;\n}\n\nfunction getFindOptions(findOptions: ResourceFindOptions<any>) {\n\tconst { type = 'contains', start, query, options } = findOptions;\n\treturn { type, start, query, options };\n}\n\nfunction isFindOptions(options: any): options is ResourceFindOptions<any> {\n\treturn Boolean(options && !!options.options);\n}\n\nfunction isFindRequest(options: any): options is ResourceFindRequest<any> {\n\treturn isFindOptions(options);\n}\n\nfunction isFindResponse(options: any): options is ResourceFindResponse<any> {\n\treturn Boolean(options && !!options.item);\n}\n\nfunction transformData(item: any, transformConfig: TransformConfig<any>) {\n\tlet transformedItem: any = {};\n\tlet sourceKeys: string[] = [];\n\tObject.keys(transformConfig).forEach((key: string) => {\n\t\tconst sourceKey = transformConfig[key as any];\n\t\ttransformedItem = {\n\t\t\t...transformedItem,\n\t\t\t[key]: item[sourceKey]\n\t\t};\n\t\tsourceKeys.push(sourceKey);\n\t});\n\tObject.keys(item)\n\t\t.filter((key) => sourceKeys.indexOf(key) === -1)\n\t\t.forEach((key) => {\n\t\t\ttransformedItem = {\n\t\t\t\t...transformedItem,\n\t\t\t\t[key]: item[key]\n\t\t\t};\n\t\t});\n\treturn transformedItem;\n}\n\nfunction transformQuery(query: ResourceQuery<any>, transformConfig: TransformConfig<any>) {\n\tconst queryKeys = Object.keys(query);\n\tlet transformedQuery: ResourceQuery<any> = {};\n\tfor (let i = 0; i < queryKeys.length; i++) {\n\t\tconst queryKey = queryKeys[i];\n\t\ttransformedQuery[transformConfig[queryKey] || queryKey] = query[queryKey];\n\t}\n\treturn transformedQuery;\n}\n\nfunction transformOptions<R extends ResourceOptions<any> | ResourceFindOptions<any>>(\n\toptions: R,\n\ttransformConfig?: TransformConfig<any>\n): R {\n\tif (transformConfig) {\n\t\tif (isFindOptions(options) && options.options.query) {\n\t\t\tconst query = transformQuery(options.options.query, transformConfig);\n\t\t\toptions.options = { ...options.options, query };\n\t\t}\n\t\tif (options.query && transformConfig) {\n\t\t\tconst query = transformQuery(options.query, transformConfig);\n\t\t\treturn { ...options, query };\n\t\t}\n\t}\n\treturn { ...options };\n}\n\nfunction isTemplateWithInit(value: any): value is ResourceTemplateWithInit<any> {\n\treturn Boolean(value && value.init);\n}\n\nfunction diffInitOptions(current: any, next: any) {\n\tconst keys = new Set([...Object.keys(current), ...Object.keys(next)]);\n\treturn [...keys].some((initKey) => auto(current[initKey], next[initKey], 1).changed);\n}\n\nfunction createResource<S = never, T extends ResourceInitOptions = ResourceInitOptions>(\n\ttemplate: ResourceTemplate<S> | ResourceTemplateWithInit<S>,\n\tinitOptions?: T\n): Resource<S> {\n\tconst dataMap = new Map<string, S[]>();\n\tconst metaMap = new Map<string, ResourceMeta>();\n\tconst statusMap = new Map<string, StatusType>();\n\tconst findMap = new Map<string, undefined | ResourceFindResult<S>>();\n\tconst requestPageMap = new Map<string, number[]>();\n\tconst invalidatorMaps: InvalidatorMaps = {\n\t\tread: new Map<string, Set<Invalidator>>(),\n\t\tfind: new Map<string, Set<Invalidator>>(),\n\t\tmeta: new Map<string, Set<Invalidator>>(),\n\t\tfailed: new Map<string, Set<Invalidator>>(),\n\t\tloading: new Map<string, Set<Invalidator>>()\n\t};\n\tconst { read, find } = template;\n\n\tfunction get(request: Partial<ResourceReadRequest<S>> = {}) {\n\t\tconst dataKey = getDataKey(request);\n\t\tconst data = dataMap.get(dataKey) || [];\n\t\treturn { data, total: data.length };\n\t}\n\n\tfunction put(response: ResourceReadResponse<S>, request: ResourceReadRequest<S>): void;\n\tfunction put(response: ResourceFindResponse<S> | undefined, request: ResourceFindRequest<S>): void;\n\tfunction put(\n\t\tresponse: ResourceReadResponse<S> | ResourceFindResponse<S> | undefined,\n\t\trequest: ResourceReadRequest<S> | ResourceFindRequest<S>\n\t) {\n\t\tif (isFindRequest(request) && (isFindResponse(response) || !response)) {\n\t\t\tsetFind(response, request);\n\t\t} else if (!isFindRequest(request) && !isFindResponse(response) && response) {\n\t\t\tsetData(response, request);\n\t\t}\n\t}\n\n\tif (isTemplateWithInit(template)) {\n\t\ttemplate.init(initOptions, { put, get });\n\t}\n\n\tfunction invalidate(type: SubscriptionType, key: string) {\n\t\tconst keyedInvalidatorMap = invalidatorMaps[type];\n\t\tconst invalidatorSet = keyedInvalidatorMap.get(key);\n\t\tif (invalidatorSet) {\n\t\t\t[...invalidatorSet].forEach((invalidator) => {\n\t\t\t\tinvalidator();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction invalidateAll() {\n\t\tObject.keys(invalidatorMaps).forEach((key: string) => {\n\t\t\tconst map = invalidatorMaps[key as keyof InvalidatorMaps];\n\t\t\tmap.forEach((invalidatorSet) => {\n\t\t\t\tinvalidatorSet.forEach((invalidator) => {\n\t\t\t\t\tinvalidator();\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction subscribe(type: SubscriptionType, invalidator: Invalidator, key: string): void {\n\t\tconst keyedInvalidatorMap = invalidatorMaps[type];\n\t\tconst invalidatorSet = keyedInvalidatorMap.get(key) || new Set<Invalidator>();\n\t\tinvalidatorSet.add(invalidator);\n\t\tkeyedInvalidatorMap.set(key, invalidatorSet);\n\t}\n\n\tfunction subscribeRead(invalidator: Invalidator, options: ResourceOptions<S>) {\n\t\tsubscribe('read', invalidator, getReadKey(options));\n\t}\n\n\tfunction subscribeMeta(invalidator: Invalidator, options: ResourceOptions<S>) {\n\t\tsubscribe('meta', invalidator, getReadKey(options));\n\t}\n\n\tfunction subscribeFind(invalidator: Invalidator, options: ResourceFindOptions<S>) {\n\t\tsubscribe('find', invalidator, getFindKey(options));\n\t}\n\n\tfunction subscribeLoading(invalidator: Invalidator, options: ResourceOptions<S> | ResourceFindOptions<S>) {\n\t\tif (isFindOptions(options)) {\n\t\t\tsubscribe('loading', invalidator, getFindKey(options));\n\t\t} else {\n\t\t\tsubscribe('loading', invalidator, getReadKey(options));\n\t\t}\n\t}\n\n\tfunction subscribeFailed(invalidator: Invalidator, options: ResourceOptions<S> | ResourceFindOptions<S>) {\n\t\tif (isFindOptions(options)) {\n\t\t\tsubscribe('failed', invalidator, getFindKey(options));\n\t\t} else {\n\t\t\tsubscribe('failed', invalidator, getReadKey(options));\n\t\t}\n\t}\n\n\tfunction unsubscribe(invalidator: Invalidator) {\n\t\tObject.keys(invalidatorMaps).forEach((type) => {\n\t\t\tconst keyedInvalidatorMap = invalidatorMaps[type as SubscriptionType];\n\t\t\tconst keys = keyedInvalidatorMap.keys();\n\t\t\t[...keys].forEach((key) => {\n\t\t\t\tconst invalidatorSet = keyedInvalidatorMap.get(key);\n\t\t\t\tif (invalidatorSet && invalidatorSet.has(invalidator)) {\n\t\t\t\t\tinvalidatorSet.delete(invalidator);\n\t\t\t\t\tif (invalidatorSet.size === 0) {\n\t\t\t\t\t\tkeyedInvalidatorMap.delete(key);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tkeyedInvalidatorMap.set(key, invalidatorSet);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction releaseResource() {\n\t\tdataMap.clear();\n\t\tmetaMap.clear();\n\t\tstatusMap.clear();\n\t\trequestPageMap.clear();\n\t}\n\n\tfunction isStatus(statusType: StatusType, key: string) {\n\t\tconst status = statusMap.get(key);\n\t\tif (status) {\n\t\t\treturn status === statusType;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction setStatus(status: StatusType, key: string) {\n\t\tstatusMap.set(key, status);\n\t}\n\n\tfunction clearStatus(key: string) {\n\t\tstatusMap.delete(key);\n\t}\n\n\tfunction isLoading(options: ResourceOptions<S> | ResourceFindOptions<S>) {\n\t\tconst key = isFindOptions(options) ? getFindKey(options) : getReadKey(options);\n\t\treturn isStatus('LOADING', key);\n\t}\n\n\tfunction isFailed(options: ResourceOptions<S> | ResourceFindOptions<S>) {\n\t\tconst key = isFindOptions(options) ? getFindKey(options) : getReadKey(options);\n\t\treturn isStatus('FAILED', key);\n\t}\n\n\tfunction setMeta(options: ResourceOptions<S>, total: number) {\n\t\tconst metaKey = getMetaKey(options);\n\t\tlet meta = metaMap.get(metaKey);\n\t\tif (!meta) {\n\t\t\tmeta = { ...options, total };\n\t\t} else {\n\t\t\tif (!meta.total || total > meta.total) {\n\t\t\t\tmeta.total = total;\n\t\t\t}\n\t\t}\n\t\tinvalidate('meta', getMetaKey(options));\n\t\tmetaMap.set(metaKey, { ...meta });\n\t}\n\n\tfunction setData(response: ResourceReadResponse<S>, request: ResourceReadRequest<S>) {\n\t\tconst { data, total } = response;\n\t\tconst { size, offset, query } = request;\n\t\tconst dataKey = getDataKey(request);\n\t\tconst cachedData = dataMap.get(dataKey) || [];\n\t\tconst maxItem = total ? total : offset + data.length;\n\t\tfor (let i = offset; i < maxItem; i += 1) {\n\t\t\tif (data[i - offset] === undefined) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcachedData[i] = data[i - offset];\n\t\t}\n\t\tclearStatus(dataKey);\n\t\tdataMap.set(dataKey, cachedData);\n\t\tconst page = Math.floor(offset / size) + 1;\n\t\tsetMeta({ size, query, page }, total);\n\t\tinvalidate('read', getReadKey({ size, query, page }));\n\t\treturn cachedData.slice(offset, offset + size).filter(() => true);\n\t}\n\n\tfunction setFind(response: ResourceFindResponse<S> | undefined, request: ResourceFindRequest<S>) {\n\t\tconst { options } = request;\n\t\tconst { size } = options;\n\t\tconst key = getFindKey(request);\n\t\tif (!response) {\n\t\t\tfindMap.set(key, response);\n\t\t} else {\n\t\t\tfindMap.set(key, {\n\t\t\t\t...response,\n\t\t\t\tpage: Math.floor(response.index / size) + 1,\n\t\t\t\tpageIndex: response.index % size\n\t\t\t});\n\t\t}\n\t\tclearStatus(key);\n\t\tinvalidate('find', getFindKey(request));\n\t}\n\n\tfunction getCachedPageData(options: { page: number; size: number; query: ResourceQuery<S> }): S[] | undefined {\n\t\tconst { size, page } = options;\n\t\tconst metaKey = getMetaKey(options);\n\t\tconst dataKey = getDataKey(options);\n\t\tconst requestedPages = requestPageMap.get(metaKey) || [];\n\t\tconst cachedData = dataMap.get(dataKey);\n\t\tif (cachedData) {\n\t\t\tconst offset = (page - 1) * size;\n\t\t\tconst requestedCachedData = cachedData.slice(offset, offset + size).filter(() => true);\n\t\t\tsetMeta(options, cachedData.length);\n\t\t\tif (requestedCachedData.length === size || requestedPages.indexOf(page) !== -1) {\n\t\t\t\treturn requestedCachedData;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getOrRead(options: ResourceOptions<S>): (undefined | S[])[] {\n\t\tconst pages = Array.isArray(options.page) ? options.page : [options.page];\n\t\tconst { size, query } = options;\n\t\tconst getOrReadResponse: (undefined | S[])[] = [];\n\t\tconst requestKey = getReadKey(options);\n\t\tconst promises: Promise<any>[] = [];\n\n\t\tfor (let i = 0; i < pages.length; i++) {\n\t\t\tconst page = pages[i];\n\t\t\tconst offset = (page - 1) * size;\n\t\t\tconst statusKey = getReadKey({ page, size, query });\n\t\t\tconst metaKey = getMetaKey({ size, query, page });\n\t\t\tconst requestedPages = requestPageMap.get(metaKey) || [];\n\t\t\tif (isLoading({ page, size, query }) || isFailed({ page, size, query })) {\n\t\t\t\tgetOrReadResponse.push(undefined);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst cachedData = getCachedPageData({ size, query, page });\n\t\t\tif (cachedData) {\n\t\t\t\tgetOrReadResponse.push(cachedData);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\trequestedPages.push(page);\n\t\t\trequestPageMap.set(metaKey, requestedPages);\n\t\t\tconst response = read(\n\t\t\t\t{ offset, size, query },\n\t\t\t\t{\n\t\t\t\t\tget,\n\t\t\t\t\tput\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (isThenable<void>(response)) {\n\t\t\t\tpromises.push(response);\n\t\t\t\tgetOrReadResponse.push(undefined);\n\t\t\t\tsetStatus('LOADING', statusKey);\n\t\t\t\tinvalidate('loading', getReadKey({ size, page, query }));\n\t\t\t\tresponse\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tclearStatus(statusKey);\n\t\t\t\t\t\tinvalidate('read', getReadKey({ size, page, query }));\n\t\t\t\t\t\tinvalidate('loading', getReadKey({ size, page, query }));\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\tsetStatus('FAILED', statusKey);\n\t\t\t\t\t\tinvalidate('loading', getReadKey({ size, page, query }));\n\t\t\t\t\t\tinvalidate('failed', getReadKey({ size, page, query }));\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgetOrReadResponse.push(getCachedPageData({ size, query, page }));\n\t\t\t}\n\t\t}\n\t\tif (promises.length) {\n\t\t\tsetStatus('LOADING', requestKey);\n\t\t\tPromise.all(promises)\n\t\t\t\t.then(() => {\n\t\t\t\t\tclearStatus(requestKey);\n\t\t\t\t\tinvalidate('read', getReadKey(options));\n\t\t\t\t\tinvalidate('loading', getReadKey(options));\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tsetStatus('FAILED', requestKey);\n\t\t\t\t\tinvalidate('loading', getReadKey(options));\n\t\t\t\t\tinvalidate('failed', getReadKey(options));\n\t\t\t\t});\n\t\t}\n\t\treturn getOrReadResponse;\n\t}\n\n\tfunction resourceFind(options: ResourceFindOptions<S>): ResourceFindResult<S> | undefined {\n\t\tconst key = getFindKey(getFindOptions(options));\n\t\tif (isStatus('LOADING', key) || isStatus('FAILED', key)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (findMap.has(key)) {\n\t\t\treturn findMap.get(key);\n\t\t}\n\n\t\tconst response = find(getFindOptions(options), { put, get });\n\t\tif (isThenable(response)) {\n\t\t\tsetStatus('LOADING', key);\n\t\t\tinvalidate('loading', getFindKey(options));\n\t\t\tresponse.then(() => {\n\t\t\t\tclearStatus(key);\n\t\t\t\tinvalidate('find', getFindKey(options));\n\t\t\t\tinvalidate('loading', getFindKey(options));\n\t\t\t});\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\treturn findMap.get(key);\n\t\t}\n\t}\n\n\tfunction resourceInit(options: T, requireDiff = false) {\n\t\tif (isTemplateWithInit(template)) {\n\t\t\tlet reset = true;\n\t\t\tif (requireDiff) {\n\t\t\t\treset = diffInitOptions(initOptions, options);\n\t\t\t}\n\t\t\tif (reset) {\n\t\t\t\treleaseResource();\n\t\t\t\ttemplate.init(options, { put, get });\n\t\t\t\tinvalidateAll();\n\t\t\t}\n\t\t} else {\n\t\t\treleaseResource();\n\t\t}\n\t\tinitOptions = options;\n\t}\n\n\tfunction meta(options: ResourceOptions<S>, request = false) {\n\t\tif (request) {\n\t\t\tgetOrRead(options);\n\t\t}\n\t\treturn metaMap.get(getMetaKey(options));\n\t}\n\n\tfunction destroy(id: string) {\n\t\treleaseResource();\n\t\tObject.keys(invalidatorMaps).forEach((key) => {\n\t\t\tinvalidatorMaps[key as SubscriptionType].clear();\n\t\t});\n\t\tif (initOptions) {\n\t\t\tconst resourceMap = templateToResourceMap.get(template);\n\t\t\tif (resourceMap) {\n\t\t\t\tresourceMap.delete(`${id}/${initOptions.id}`);\n\t\t\t}\n\t\t}\n\t\ttemplateToResourceMap.get(template);\n\t}\n\n\treturn {\n\t\tfind: resourceFind,\n\t\tgetOrRead,\n\t\tinit: resourceInit,\n\t\tmeta,\n\t\tsubscribeMeta,\n\t\tsubscribeRead,\n\t\tsubscribeFind,\n\t\tsubscribeFailed,\n\t\tsubscribeLoading,\n\t\tunsubscribe,\n\t\tisLoading,\n\t\tisFailed,\n\t\tdestroy\n\t};\n}\n\nconst optionInvalidatorMap = new Map<any, Set<Invalidator>>();\nconst templateToResourceMap = new Map<ResourceTemplate<any>, Map<string, Resource<any>>>();\nconst idToResourceMap = new Map<string, Set<{ resource: Resource<any>; type: 'owner' | 'subscribed' }>>();\n\nfunction createOptionsWrapper(): Options<any> {\n\tlet options: ResourceOptions<any> = {\n\t\tpage: 1,\n\t\tsize: 30,\n\t\tquery: {}\n\t};\n\n\tfunction invalidate() {\n\t\tconst invalidatorSet = optionInvalidatorMap.get(setOptions) || [];\n\t\t[...invalidatorSet].forEach((invalidator) => {\n\t\t\tinvalidator();\n\t\t});\n\t}\n\n\tfunction setOptions(newOptions?: Partial<ResourceOptions<any>>): ResourceOptions<any> {\n\t\tif (newOptions) {\n\t\t\tconst calculatedOptions = { ...options, ...newOptions };\n\t\t\tconst { changed } = auto(options, calculatedOptions, 2);\n\t\t\tif (changed) {\n\t\t\t\toptions = calculatedOptions;\n\t\t\t\tinvalidate();\n\t\t\t}\n\t\t}\n\t\treturn options;\n\t}\n\tsetOptions.options = setOptions;\n\treturn setOptions;\n}\n\nfunction isTemplate(value: any): value is ResourceTemplate<any> {\n\treturn Boolean(value && typeof value.read === 'function');\n}\n\nfunction isResource(value: any): value is ResourceTemplateWrapper {\n\treturn Boolean(value && !!value.id);\n}\n\nfunction getResource(templateWrapper: ResourceTemplateWrapper, id: string): Resource<any>;\nfunction getResource(template: ResourceTemplate<any>, id: string, init?: any): Resource<any>;\nfunction getResource(\n\ttemplateOrWrapper: ResourceTemplateWrapper | ResourceTemplate<any>,\n\tid: string,\n\tinit?: any\n): Resource<any> {\n\tconst templateId = (isResource(templateOrWrapper) ? templateOrWrapper.id : init && `${id}/${init.id}`) || 'global';\n\tconst template = isResource(templateOrWrapper) ? templateOrWrapper.template : templateOrWrapper;\n\tconst initOptions = isResource(templateOrWrapper) ? templateOrWrapper.initOptions : init;\n\tconst resourceMap = templateToResourceMap.get(template) || new Map<string, Resource<any>>();\n\tlet resource = resourceMap.get(templateId);\n\tconst registeredResources =\n\t\tidToResourceMap.get(id) || new Set<{ resource: Resource<any>; type: 'owner' | 'subscribed' }>();\n\tif (!resource) {\n\t\tresource = createResource(template, initOptions);\n\t\tresourceMap.set(templateId, resource);\n\t\ttemplateToResourceMap.set(template, resourceMap);\n\t\tconst ownerId = templateId.substring(0, templateId.indexOf('/'));\n\t\tconst isOwner = ownerId === id;\n\t\tif (!isOwner) {\n\t\t\tconst ownerResources =\n\t\t\t\tidToResourceMap.get(ownerId) || new Set<{ resource: Resource<any>; type: 'owner' | 'subscribed' }>();\n\t\t\townerResources.add({ resource, type: 'owner' });\n\t\t\tidToResourceMap.set(ownerId, ownerResources);\n\t\t}\n\t\tregisteredResources.add({ resource, type: isOwner ? 'owner' : 'subscribed' });\n\t} else {\n\t\tif (init) {\n\t\t\tresource.init(init, true);\n\t\t}\n\t\tregisteredResources.add({ resource, type: 'subscribed' });\n\t}\n\tidToResourceMap.set(id, registeredResources);\n\treturn resource;\n}\n\nconst factory = create({ diffProperty, invalidator, destroy });\n\nconst resourceMiddlewareFactory = factory(\n\t({ id: middlewareId, middleware: { diffProperty, invalidator, destroy } }): ResourceMiddleware => {\n\t\tconst optionsMap = new Map<string, Options<any>>();\n\t\tdestroy(() => {\n\t\t\tconst resources = idToResourceMap.get(middlewareId);\n\t\t\tif (resources) {\n\t\t\t\tresources.forEach((resource) => {\n\t\t\t\t\tif (resource.type === 'subscribed') {\n\t\t\t\t\t\tresource.resource.unsubscribe(invalidator);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresource.resource.destroy(middlewareId);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tidToResourceMap.delete(middlewareId);\n\t\t});\n\t\tdiffProperty(\n\t\t\t'resource',\n\t\t\t(): ResourceMiddlewareProperties<any> => {\n\t\t\t\treturn {} as any;\n\t\t\t},\n\t\t\t({ resource: current }, { resource: next }) => {\n\t\t\t\tif (current && next) {\n\t\t\t\t\tconst id = next.template.id || 'global';\n\t\t\t\t\tconst {\n\t\t\t\t\t\ttemplate: { initOptions: currentInitOptions }\n\t\t\t\t\t} = current;\n\t\t\t\t\tconst {\n\t\t\t\t\t\ttemplate: { initOptions: nextInitOptions }\n\t\t\t\t\t} = next;\n\t\t\t\t\tif (nextInitOptions) {\n\t\t\t\t\t\tconst changed = diffInitOptions(currentInitOptions || {}, nextInitOptions);\n\t\t\t\t\t\tif (changed) {\n\t\t\t\t\t\t\tconst resourceMap = templateToResourceMap.get(next.template.template);\n\t\t\t\t\t\t\tif (resourceMap) {\n\t\t\t\t\t\t\t\tconst resource = resourceMap.get(id);\n\t\t\t\t\t\t\t\tif (resource) {\n\t\t\t\t\t\t\t\t\tresource.init(nextInitOptions);\n\t\t\t\t\t\t\t\t\tinvalidator();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst nextOptions = next.options;\n\t\t\t\t\tconst currOptions = current.options;\n\t\t\t\t\tif (currOptions && currOptions !== nextOptions) {\n\t\t\t\t\t\tconst invalidatorSet = optionInvalidatorMap.get(currOptions.options);\n\t\t\t\t\t\tif (invalidatorSet) {\n\t\t\t\t\t\t\tinvalidatorSet.delete(invalidator);\n\t\t\t\t\t\t\tinvalidator();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (next) {\n\t\t\t\t\tconst nextOptions = next.options;\n\t\t\t\t\tconst currOptions = current && current.options;\n\t\t\t\t\tif (nextOptions) {\n\t\t\t\t\t\tconst options: any = (options?: Partial<ResourceOptions<any>>) => {\n\t\t\t\t\t\t\tconst invalidatorSet = optionInvalidatorMap.get(nextOptions.options) || new Set();\n\t\t\t\t\t\t\tinvalidatorSet.add(invalidator);\n\t\t\t\t\t\t\toptionInvalidatorMap.set(nextOptions.options, invalidatorSet);\n\t\t\t\t\t\t\treturn nextOptions.options(options);\n\t\t\t\t\t\t};\n\t\t\t\t\t\toptions.options = nextOptions.options;\n\t\t\t\t\t\tif (!currOptions || currOptions.options !== nextOptions.options) {\n\t\t\t\t\t\t\tinvalidator();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\ttemplate: next.template\n\t\t\t\t\t\t} as any;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tconst middleware = function(resource: any) {\n\t\t\tif (isTemplate(resource.template)) {\n\t\t\t\tlet { template, transform, initOptions, ...rest } = resource;\n\t\t\t\treturn {\n\t\t\t\t\ttemplate: {\n\t\t\t\t\t\ttemplate,\n\t\t\t\t\t\ttransform,\n\t\t\t\t\t\tid: initOptions ? `${middlewareId}/${initOptions.id}` : 'global',\n\t\t\t\t\t\tinitOptions\n\t\t\t\t\t},\n\t\t\t\t\t...rest\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn resource;\n\t\t};\n\t\tmiddleware.createOptions = (key: string): Options<any> => {\n\t\t\tconst options = optionsMap.get(key);\n\t\t\tif (options) {\n\t\t\t\treturn options;\n\t\t\t}\n\t\t\tconst optionsWrapper = createOptionsWrapper();\n\t\t\tfunction setOptions(options?: Partial<ResourceOptions<any>>) {\n\t\t\t\tconst invalidatorSet = optionInvalidatorMap.get(optionsWrapper.options) || new Set();\n\t\t\t\tinvalidatorSet.add(invalidator);\n\t\t\t\toptionInvalidatorMap.set(optionsWrapper.options, invalidatorSet);\n\t\t\t\treturn optionsWrapper(options);\n\t\t\t}\n\t\t\tsetOptions.options = optionsWrapper.options;\n\t\t\toptionsMap.set(key, setOptions);\n\t\t\treturn setOptions;\n\t\t};\n\t\tmiddleware.getOrRead = (template: any, options: any, init?: any) => {\n\t\t\tconst resource = getResource(template, middlewareId, init);\n\t\t\tconst transform = !isTemplate(template) && template.transform;\n\t\t\tconst resourceOptions = transformOptions(options, transform);\n\t\t\tresource.subscribeRead(invalidator, options);\n\t\t\tconst data = resource.getOrRead(resourceOptions);\n\t\t\tif (data && transform) {\n\t\t\t\treturn data.map((items: any) => {\n\t\t\t\t\tif (items) {\n\t\t\t\t\t\treturn items.map((item: any) => transformData(item, transform));\n\t\t\t\t\t}\n\t\t\t\t\treturn items;\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn data;\n\t\t};\n\t\tmiddleware.find = (template: any, options: any, init?: any) => {\n\t\t\tconst resource = getResource(template, middlewareId, init);\n\t\t\tconst transform = !isTemplate(template) && template.transform;\n\t\t\tconst findOptions = transformOptions(options, transform);\n\t\t\tresource.subscribeFind(invalidator, findOptions);\n\t\t\tconst result = resource.find(findOptions);\n\t\t\tif (result && result.item && transform) {\n\t\t\t\tresult.item = transformData(result.item, transform);\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\n\t\tmiddleware.meta = (template: any, options: any, request = false, init?: any) => {\n\t\t\tconst resource = getResource(template, middlewareId, init);\n\t\t\tconst transform = !isTemplate(template) && template.transform;\n\t\t\tconst resourceOptions = transformOptions(options, transform);\n\t\t\tresource.subscribeMeta(invalidator, resourceOptions);\n\t\t\tif (request) {\n\t\t\t\tresource.subscribeRead(invalidator, resourceOptions);\n\t\t\t}\n\t\t\treturn resource.meta(resourceOptions, request);\n\t\t};\n\t\tmiddleware.isLoading = (template: any, options: any, init?: any) => {\n\t\t\tconst resource = getResource(template, middlewareId, init);\n\t\t\tconst transform = !isTemplate(template) && template.transform;\n\t\t\tconst resourceOptions = transformOptions(options, transform);\n\t\t\tresource.subscribeLoading(invalidator, resourceOptions);\n\t\t\treturn resource.isLoading(resourceOptions);\n\t\t};\n\t\tmiddleware.isFailed = (template: any, options: any, init?: any) => {\n\t\t\tconst resource = getResource(template, middlewareId, init);\n\t\t\tconst transform = !isTemplate(template) && template.transform;\n\t\t\tconst resourceOptions = transformOptions(options, transform);\n\t\t\tresource.subscribeFailed(invalidator, resourceOptions);\n\t\t\treturn resource.isFailed(resourceOptions);\n\t\t};\n\t\treturn middleware;\n\t}\n);\n\nexport function createResourceMiddleware<MIDDLEWARE = void>() {\n\treturn resourceMiddlewareFactory.withType<\n\t\tResourceMiddleware<MIDDLEWARE>,\n\t\tMIDDLEWARE extends void ? {} : ResourceMiddlewareProperties<MIDDLEWARE>\n\t>();\n}\n"]}