export declare const cache: import("../interfaces").MiddlewareResultFactory<import("../interfaces").WidgetProperties, import("../interfaces").DNode<any>[], {
    icache: import("../interfaces").MiddlewareResultFactory<import("../interfaces").WidgetProperties, import("../interfaces").DNode<any>[], {
        invalidator: import("../interfaces").MiddlewareResultFactory<import("../interfaces").WidgetProperties, import("../interfaces").DNode<any>[], import("../interfaces").MiddlewareMap<() => {
            api: {};
            properties: {};
        }>, () => void>;
        destroy: import("../interfaces").MiddlewareResultFactory<import("../interfaces").WidgetProperties, import("../interfaces").DNode<any>[], import("../interfaces").MiddlewareMap<() => {
            api: {};
            properties: {};
        }>, (destroyFunction: () => void) => void>;
    }, import("./icache").ICacheResult<void>>;
}, {
    get<T = any>(key: any): T | undefined;
    set<T = any>(key: any, value: T): void;
    has(key: any): boolean;
    delete(key: any): void;
    clear(): void;
}>;
export default cache;
