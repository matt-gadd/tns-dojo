{"version":3,"file":"theme.mjs","sourceRoot":"","sources":["theme.ts"],"names":[],"mappings":"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","sourcesContent":["import { Theme, Classes, ClassNames, ThemeWithVariant, ThemeWithVariants, NamedVariant } from './../interfaces';\nimport { create, invalidator, diffProperty, getRegistry } from '../vdom';\nimport icache from './icache';\nimport injector from './injector';\nimport Set from '../../shim/Set';\nimport { auto } from '../diff';\nimport Registry from '../Registry';\nimport {\n\tThemeInjector,\n\tisThemeInjectorPayloadWithVariant,\n\tisThemeWithVariants,\n\tisThemeWithVariant,\n\tThemeInjectorPayload,\n\tThemeWithVariantsInjectorPayload\n} from '../ThemeInjector';\n\nexport { Theme, Classes, ClassNames } from './../interfaces';\n\nexport interface ThemeProperties {\n\ttheme?: Theme | ThemeWithVariant;\n\tclasses?: Classes;\n}\n\nexport const THEME_KEY = ' _key';\n\nexport const INJECTED_THEME_KEY = '__theme_injector';\n\nfunction registerThemeInjector(theme: Theme | ThemeWithVariant | undefined, themeRegistry: Registry): ThemeInjector {\n\tconst themeInjector = new ThemeInjector(theme);\n\tthemeRegistry.defineInjector(INJECTED_THEME_KEY, (invalidator) => {\n\t\tthemeInjector.setInvalidator(invalidator);\n\t\treturn () => themeInjector;\n\t});\n\treturn themeInjector;\n}\n\nconst factory = create({ invalidator, icache, diffProperty, injector, getRegistry }).properties<ThemeProperties>();\n\nexport const theme = factory(\n\t({ middleware: { invalidator, icache, diffProperty, injector, getRegistry }, properties }) => {\n\t\tlet themeKeys = new Set();\n\n\t\tdiffProperty('theme', properties, (current, next) => {\n\t\t\tconst { changed } = auto(current.theme, next.theme, 3);\n\t\t\tif (changed) {\n\t\t\t\ticache.clear();\n\t\t\t\tinvalidator();\n\t\t\t}\n\t\t});\n\t\tdiffProperty('classes', (current: ThemeProperties, next: ThemeProperties) => {\n\t\t\tlet result = false;\n\t\t\tif ((current.classes && !next.classes) || (!current.classes && next.classes)) {\n\t\t\t\tresult = true;\n\t\t\t} else if (current.classes && next.classes) {\n\t\t\t\tconst keys = [...themeKeys.values()];\n\t\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\t\tlet key = keys[i];\n\t\t\t\t\tresult = auto(current.classes[key], next.classes[key], 2).changed;\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (result) {\n\t\t\t\ticache.clear();\n\t\t\t\tinvalidator();\n\t\t\t}\n\t\t});\n\n\t\tfunction getTheme() {\n\t\t\tconst { theme } = properties();\n\t\t\tif (theme) {\n\t\t\t\treturn theme;\n\t\t\t}\n\t\t\tconst themeInjector = injector.get<ThemeInjector>(INJECTED_THEME_KEY);\n\t\t\tif (themeInjector) {\n\t\t\t\tconst themePayload = themeInjector.get();\n\t\t\t\tif (isThemeInjectorPayloadWithVariant(themePayload)) {\n\t\t\t\t\treturn { theme: themePayload.theme, variant: themePayload.variant };\n\t\t\t\t} else if (themePayload) {\n\t\t\t\t\treturn themePayload.theme;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst themeInjector = injector.get(INJECTED_THEME_KEY);\n\t\tif (!themeInjector) {\n\t\t\tconst registry = getRegistry();\n\t\t\tif (registry) {\n\t\t\t\tregisterThemeInjector(undefined, registry.base);\n\t\t\t}\n\t\t}\n\t\tinjector.subscribe(INJECTED_THEME_KEY, () => {\n\t\t\ticache.clear();\n\t\t\tinvalidator();\n\t\t});\n\n\t\tfunction set(theme: Theme): void;\n\t\tfunction set<T extends ThemeWithVariants>(theme: T, variant?: keyof T['variants'] | NamedVariant): void;\n\t\tfunction set<T extends ThemeWithVariants>(\n\t\t\ttheme: Theme | T,\n\t\t\tvariant?: keyof T['variants'] | NamedVariant\n\t\t): void {\n\t\t\tconst currentTheme = injector.get<ThemeInjector>(INJECTED_THEME_KEY);\n\t\t\tif (currentTheme) {\n\t\t\t\tif (isThemeWithVariants(theme)) {\n\t\t\t\t\tcurrentTheme.set(theme, variant);\n\t\t\t\t} else {\n\t\t\t\t\tcurrentTheme.set(theme);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tclasses<T extends ClassNames>(css: T): T {\n\t\t\t\tconst cachedTheme = icache.get<T>(css);\n\t\t\t\tif (cachedTheme) {\n\t\t\t\t\treturn cachedTheme;\n\t\t\t\t}\n\t\t\t\tconst { [THEME_KEY]: key, ...classes } = css;\n\t\t\t\tthemeKeys.add(key);\n\t\t\t\tlet theme = classes as ClassNames;\n\t\t\t\tlet { classes: currentClasses } = properties();\n\t\t\t\tlet currentTheme = getTheme();\n\n\t\t\t\tif (currentTheme && isThemeWithVariant(currentTheme)) {\n\t\t\t\t\tcurrentTheme = isThemeWithVariants(currentTheme.theme)\n\t\t\t\t\t\t? currentTheme.theme.theme\n\t\t\t\t\t\t: currentTheme.theme;\n\t\t\t\t}\n\n\t\t\t\tif (currentTheme && currentTheme[key]) {\n\t\t\t\t\ttheme = { ...theme, ...currentTheme[key] };\n\t\t\t\t}\n\t\t\t\tif (currentClasses && currentClasses[key]) {\n\t\t\t\t\tconst classKeys = Object.keys(currentClasses[key]);\n\t\t\t\t\tfor (let i = 0; i < classKeys.length; i++) {\n\t\t\t\t\t\tconst classKey = classKeys[i];\n\t\t\t\t\t\tif (theme[classKey]) {\n\t\t\t\t\t\t\ttheme[classKey] = `${theme[classKey]} ${currentClasses[key][classKey].join(' ')}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ticache.set(css, theme, false);\n\t\t\t\treturn theme as T;\n\t\t\t},\n\t\t\tvariant() {\n\t\t\t\tconst theme = getTheme();\n\t\t\t\tif (theme && isThemeWithVariant(theme)) {\n\t\t\t\t\treturn theme.variant.value.root;\n\t\t\t\t}\n\t\t\t},\n\t\t\tset,\n\t\t\tget(): ThemeWithVariantsInjectorPayload | ThemeInjectorPayload | undefined {\n\t\t\t\tconst currentTheme = injector.get<ThemeInjector>(INJECTED_THEME_KEY);\n\t\t\t\tif (currentTheme) {\n\t\t\t\t\treturn currentTheme.get();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n);\n\nexport default theme;\n"]}