{"version":3,"file":"theme.js","sourceRoot":"","sources":["theme.ts"],"names":[],"mappings":"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","sourcesContent":["import { Theme, Classes, ClassNames, ThemeWithVariant, ThemeWithVariants, NamedVariant } from './../interfaces';\nimport { create, invalidator, diffProperty, getRegistry } from '../vdom';\nimport icache from './icache';\nimport injector from './injector';\nimport Set from '../../shim/Set';\nimport { auto } from '../diff';\nimport Registry from '../Registry';\nimport {\n\tThemeInjector,\n\tisThemeInjectorPayloadWithVariant,\n\tisThemeWithVariants,\n\tisThemeWithVariant,\n\tThemeInjectorPayload,\n\tThemeWithVariantsInjectorPayload\n} from '../ThemeInjector';\n\nexport { Theme, Classes, ClassNames } from './../interfaces';\n\nexport interface ThemeProperties {\n\ttheme?: Theme | ThemeWithVariant;\n\tclasses?: Classes;\n}\n\nexport const THEME_KEY = ' _key';\n\nexport const INJECTED_THEME_KEY = '__theme_injector';\n\nfunction registerThemeInjector(theme: Theme | ThemeWithVariant | undefined, themeRegistry: Registry): ThemeInjector {\n\tconst themeInjector = new ThemeInjector(theme);\n\tthemeRegistry.defineInjector(INJECTED_THEME_KEY, (invalidator) => {\n\t\tthemeInjector.setInvalidator(invalidator);\n\t\treturn () => themeInjector;\n\t});\n\treturn themeInjector;\n}\n\nconst factory = create({ invalidator, icache, diffProperty, injector, getRegistry }).properties<ThemeProperties>();\n\nexport const theme = factory(\n\t({ middleware: { invalidator, icache, diffProperty, injector, getRegistry }, properties }) => {\n\t\tlet themeKeys = new Set();\n\n\t\tdiffProperty('theme', properties, (current, next) => {\n\t\t\tconst { changed } = auto(current.theme, next.theme, 3);\n\t\t\tif (changed) {\n\t\t\t\ticache.clear();\n\t\t\t\tinvalidator();\n\t\t\t}\n\t\t});\n\t\tdiffProperty('classes', (current: ThemeProperties, next: ThemeProperties) => {\n\t\t\tlet result = false;\n\t\t\tif ((current.classes && !next.classes) || (!current.classes && next.classes)) {\n\t\t\t\tresult = true;\n\t\t\t} else if (current.classes && next.classes) {\n\t\t\t\tconst keys = [...themeKeys.values()];\n\t\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\t\tlet key = keys[i];\n\t\t\t\t\tresult = auto(current.classes[key], next.classes[key], 2).changed;\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (result) {\n\t\t\t\ticache.clear();\n\t\t\t\tinvalidator();\n\t\t\t}\n\t\t});\n\n\t\tfunction getTheme() {\n\t\t\tconst { theme } = properties();\n\t\t\tif (theme) {\n\t\t\t\treturn theme;\n\t\t\t}\n\t\t\tconst themeInjector = injector.get<ThemeInjector>(INJECTED_THEME_KEY);\n\t\t\tif (themeInjector) {\n\t\t\t\tconst themePayload = themeInjector.get();\n\t\t\t\tif (isThemeInjectorPayloadWithVariant(themePayload)) {\n\t\t\t\t\treturn { theme: themePayload.theme, variant: themePayload.variant };\n\t\t\t\t} else if (themePayload) {\n\t\t\t\t\treturn themePayload.theme;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst themeInjector = injector.get(INJECTED_THEME_KEY);\n\t\tif (!themeInjector) {\n\t\t\tconst registry = getRegistry();\n\t\t\tif (registry) {\n\t\t\t\tregisterThemeInjector(undefined, registry.base);\n\t\t\t}\n\t\t}\n\t\tinjector.subscribe(INJECTED_THEME_KEY, () => {\n\t\t\ticache.clear();\n\t\t\tinvalidator();\n\t\t});\n\n\t\tfunction set(theme: Theme): void;\n\t\tfunction set<T extends ThemeWithVariants>(theme: T, variant?: keyof T['variants'] | NamedVariant): void;\n\t\tfunction set<T extends ThemeWithVariants>(\n\t\t\ttheme: Theme | T,\n\t\t\tvariant?: keyof T['variants'] | NamedVariant\n\t\t): void {\n\t\t\tconst currentTheme = injector.get<ThemeInjector>(INJECTED_THEME_KEY);\n\t\t\tif (currentTheme) {\n\t\t\t\tif (isThemeWithVariants(theme)) {\n\t\t\t\t\tcurrentTheme.set(theme, variant);\n\t\t\t\t} else {\n\t\t\t\t\tcurrentTheme.set(theme);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tclasses<T extends ClassNames>(css: T): T {\n\t\t\t\tconst cachedTheme = icache.get<T>(css);\n\t\t\t\tif (cachedTheme) {\n\t\t\t\t\treturn cachedTheme;\n\t\t\t\t}\n\t\t\t\tconst { [THEME_KEY]: key, ...classes } = css;\n\t\t\t\tthemeKeys.add(key);\n\t\t\t\tlet theme = classes as ClassNames;\n\t\t\t\tlet { classes: currentClasses } = properties();\n\t\t\t\tlet currentTheme = getTheme();\n\n\t\t\t\tif (currentTheme && isThemeWithVariant(currentTheme)) {\n\t\t\t\t\tcurrentTheme = isThemeWithVariants(currentTheme.theme)\n\t\t\t\t\t\t? currentTheme.theme.theme\n\t\t\t\t\t\t: currentTheme.theme;\n\t\t\t\t}\n\n\t\t\t\tif (currentTheme && currentTheme[key]) {\n\t\t\t\t\ttheme = { ...theme, ...currentTheme[key] };\n\t\t\t\t}\n\t\t\t\tif (currentClasses && currentClasses[key]) {\n\t\t\t\t\tconst classKeys = Object.keys(currentClasses[key]);\n\t\t\t\t\tfor (let i = 0; i < classKeys.length; i++) {\n\t\t\t\t\t\tconst classKey = classKeys[i];\n\t\t\t\t\t\tif (theme[classKey]) {\n\t\t\t\t\t\t\ttheme[classKey] = `${theme[classKey]} ${currentClasses[key][classKey].join(' ')}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ticache.set(css, theme, false);\n\t\t\t\treturn theme as T;\n\t\t\t},\n\t\t\tvariant() {\n\t\t\t\tconst theme = getTheme();\n\t\t\t\tif (theme && isThemeWithVariant(theme)) {\n\t\t\t\t\treturn theme.variant.value.root;\n\t\t\t\t}\n\t\t\t},\n\t\t\tset,\n\t\t\tget(): ThemeWithVariantsInjectorPayload | ThemeInjectorPayload | undefined {\n\t\t\t\tconst currentTheme = injector.get<ThemeInjector>(INJECTED_THEME_KEY);\n\t\t\t\tif (currentTheme) {\n\t\t\t\t\treturn currentTheme.get();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n);\n\nexport default theme;\n"]}