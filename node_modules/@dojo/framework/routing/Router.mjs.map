{"version":3,"file":"Router.mjs","sourceRoot":"","sources":["Router.ts"],"names":[],"mappings":"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","sourcesContent":["import global from '../shim/global';\nimport Evented from '../core/Evented';\nimport {\n\tRouteConfig,\n\tHistory,\n\tRouteContext,\n\tParams,\n\tRouterInterface,\n\tRoute,\n\tRouterOptions,\n\tMatchType\n} from './interfaces';\nimport { HashHistory } from './history/HashHistory';\nimport { EventObject } from '../core/Evented';\n\nconst PARAM = '__PARAM__';\n\nconst paramRegExp = new RegExp(/^{.+}$/);\n\ninterface RouteWrapper {\n\troute: Route;\n\tsegments: string[];\n\tparent: RouteWrapper | undefined;\n\ttype: MatchType;\n\tparams: Params;\n}\n\nexport interface NavEvent extends EventObject<string> {\n\toutlet?: string;\n\tcontext?: RouteContext;\n}\n\nexport interface RouteEvent extends EventObject<string> {\n\troute: RouteContext;\n\taction: 'enter' | 'exit';\n}\n\nexport interface OutletEvent extends EventObject<string> {\n\toutlet: RouteContext;\n\taction: 'enter' | 'exit';\n}\n\nconst ROUTE_SEGMENT_SCORE = 7;\nconst DYNAMIC_SEGMENT_PENALTY = 2;\n\nfunction matchingParams({ params: previousParams }: RouteContext, { params }: RouteContext) {\n\tconst matching = Object.keys(previousParams).every((key) => previousParams[key] === params[key]);\n\tif (!matching) {\n\t\treturn false;\n\t}\n\treturn Object.keys(params).every((key) => previousParams[key] === params[key]);\n}\n\nexport class Router extends Evented<{ nav: NavEvent; route: RouteEvent; outlet: OutletEvent }>\n\timplements RouterInterface {\n\tprivate _routes: Route[] = [];\n\tprivate _routeMap: { [index: string]: Route } = Object.create(null);\n\tprivate _matchedRoutes: { [index: string]: RouteContext } = Object.create(null);\n\tprivate _matchedOutletMap = new Map<string, Map<string, RouteContext>>();\n\tprivate _currentParams: Params = {};\n\tprivate _currentQueryParams: Params = {};\n\tprivate _defaultRoute: string | undefined;\n\tprivate _history!: History;\n\tprivate _options: RouterOptions;\n\tprivate _currentMatchedRoute: RouteContext | undefined;\n\n\tconstructor(config: RouteConfig[], options: RouterOptions = {}) {\n\t\tsuper();\n\t\tthis._options = options;\n\t\tthis._register(config);\n\t\tconst autostart = options.autostart === undefined ? true : options.autostart;\n\t\tif (autostart) {\n\t\t\tthis.start();\n\t\t}\n\t}\n\n\t/**\n\t * Sets the path against the registered history manager\n\t *\n\t * @param path The path to set on the history manager\n\t */\n\tpublic setPath(path: string): void {\n\t\tthis._history.set(path);\n\t}\n\n\tpublic start() {\n\t\tconst { HistoryManager = HashHistory, base, window } = this._options;\n\t\tthis._history = new HistoryManager({ onChange: this._onChange, base, window });\n\t\tif (this._matchedRoutes.errorRoute && this._defaultRoute) {\n\t\t\tconst path = this.link(this._defaultRoute);\n\t\t\tif (path) {\n\t\t\t\tthis.setPath(path);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Generate a link for a given outlet identifier and optional params.\n\t *\n\t * @param outlet The outlet to generate a link for\n\t * @param params Optional Params for the generated link\n\t */\n\tpublic link(outlet: string, params: Params = {}): string | undefined {\n\t\tlet route = this._routeMap[outlet];\n\t\tif (route === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet linkPath: string | undefined = route.fullPath;\n\t\tif (route.fullQueryParams.length > 0) {\n\t\t\tlet queryString = route.fullQueryParams.reduce((queryParamString, param, index) => {\n\t\t\t\tif (index > 0) {\n\t\t\t\t\treturn `${queryParamString}&${param}={${param}}`;\n\t\t\t\t}\n\t\t\t\treturn `?${param}={${param}}`;\n\t\t\t}, '');\n\t\t\tlinkPath = `${linkPath}${queryString}`;\n\t\t}\n\t\tparams = { ...route.defaultParams, ...this._currentQueryParams, ...this._currentParams, ...params };\n\n\t\tif (Object.keys(params).length === 0 && route.fullParams.length > 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst fullParams = [...route.fullParams, ...route.fullQueryParams];\n\t\tfor (let i = 0; i < fullParams.length; i++) {\n\t\t\tconst param = fullParams[i];\n\t\t\tif (params[param]) {\n\t\t\t\tlinkPath = linkPath.replace(`{${param}}`, params[param]);\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\t\treturn this._history.prefix(linkPath);\n\t}\n\n\t/**\n\t * Returns the route context for the route identifier if one has been matched\n\t *\n\t * @param routeId The route identifer\n\t */\n\tpublic getRoute(routeId: string): RouteContext | undefined {\n\t\treturn this._matchedRoutes[routeId];\n\t}\n\n\tpublic getOutlet(outletId: string): undefined | Map<string, RouteContext> {\n\t\treturn this._matchedOutletMap.get(outletId);\n\t}\n\n\tpublic getMatchedRoute(): RouteContext | undefined {\n\t\treturn this._currentMatchedRoute;\n\t}\n\n\t/**\n\t * Returns all the params for the current matched outlets\n\t */\n\tpublic get currentParams() {\n\t\treturn this._currentParams;\n\t}\n\n\t/**\n\t * Strips the leading slash on a path if one exists\n\t *\n\t * @param path The path to strip a leading slash\n\t */\n\tprivate _stripLeadingSlash(path: string): string {\n\t\tif (path[0] === '/') {\n\t\t\treturn path.slice(1);\n\t\t}\n\t\treturn path;\n\t}\n\n\t/**\n\t * Registers the routing configuration\n\t *\n\t * @param config The configuration\n\t * @param routes The routes\n\t * @param parentRoute The parent route\n\t */\n\tprivate _register(config: RouteConfig[], routes?: Route[], parentRoute?: Route): void {\n\t\troutes = routes ? routes : this._routes;\n\t\tfor (let i = 0; i < config.length; i++) {\n\t\t\tlet { path, outlet, children, defaultRoute = false, defaultParams = {}, id, title } = config[i];\n\t\t\tlet [parsedPath, queryParamString] = path.split('?');\n\t\t\tlet queryParams: string[] = [];\n\t\t\tparsedPath = this._stripLeadingSlash(parsedPath);\n\n\t\t\tconst segments: string[] = parsedPath.split('/');\n\t\t\tconst route: Route = {\n\t\t\t\tparams: [],\n\t\t\t\tid,\n\t\t\t\toutlet,\n\t\t\t\ttitle,\n\t\t\t\tpath: parsedPath,\n\t\t\t\tsegments,\n\t\t\t\tdefaultParams: parentRoute ? { ...parentRoute.defaultParams, ...defaultParams } : defaultParams,\n\t\t\t\tchildren: [],\n\t\t\t\tfullPath: parentRoute ? `${parentRoute.fullPath}/${parsedPath}` : parsedPath,\n\t\t\t\tfullParams: [],\n\t\t\t\tfullQueryParams: [],\n\t\t\t\tscore: parentRoute ? parentRoute.score : 0\n\t\t\t};\n\t\t\tif (defaultRoute) {\n\t\t\t\tthis._defaultRoute = id;\n\t\t\t}\n\t\t\tfor (let i = 0; i < segments.length; i++) {\n\t\t\t\tconst segment = segments[i];\n\t\t\t\troute.score += ROUTE_SEGMENT_SCORE;\n\t\t\t\tif (paramRegExp.test(segment)) {\n\t\t\t\t\troute.score -= DYNAMIC_SEGMENT_PENALTY;\n\t\t\t\t\troute.params.push(segment.replace('{', '').replace('}', ''));\n\t\t\t\t\tsegments[i] = PARAM;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (queryParamString) {\n\t\t\t\tqueryParams = queryParamString.split('&').map((queryParam) => {\n\t\t\t\t\treturn queryParam.replace('{', '').replace('}', '');\n\t\t\t\t});\n\t\t\t}\n\t\t\troute.fullQueryParams = parentRoute ? [...parentRoute.fullQueryParams, ...queryParams] : queryParams;\n\n\t\t\troute.fullParams = parentRoute ? [...parentRoute.fullParams, ...route.params] : route.params;\n\n\t\t\tif (children && children.length > 0) {\n\t\t\t\tthis._register(children, route.children, route);\n\t\t\t}\n\t\t\tthis._routeMap[id] = route;\n\t\t\troutes.push(route);\n\t\t}\n\t}\n\n\t/**\n\t * Returns an object of query params\n\t *\n\t * @param queryParamString The string of query params, e.g `paramOne=one&paramTwo=two`\n\t */\n\tprivate _getQueryParams(queryParamString?: string): { [index: string]: string } {\n\t\tconst queryParams: { [index: string]: string } = {};\n\t\tif (queryParamString) {\n\t\t\tconst queryParameters = queryParamString.split('&');\n\t\t\tfor (let i = 0; i < queryParameters.length; i++) {\n\t\t\t\tconst [key, value] = queryParameters[i].split('=');\n\t\t\t\tqueryParams[key] = value;\n\t\t\t}\n\t\t}\n\t\treturn queryParams;\n\t}\n\n\t/**\n\t * Called on change of the route by the the registered history manager. Matches the path against\n\t * the registered outlets.\n\t *\n\t * @param requestedPath The path of the requested route\n\t */\n\tprivate _onChange = (requestedPath: string): void => {\n\t\trequestedPath = this._stripLeadingSlash(requestedPath);\n\t\tconst previousMatchedRoutes = this._matchedRoutes;\n\t\tthis._matchedRoutes = Object.create(null);\n\t\tthis._matchedOutletMap.clear();\n\t\tconst [path, queryParamString] = requestedPath.split('?');\n\t\tthis._currentQueryParams = this._getQueryParams(queryParamString);\n\t\tconst segments = path.split('/');\n\t\tlet routeConfigs: RouteWrapper[] = this._routes.map((route) => ({\n\t\t\troute,\n\t\t\tsegments: [...segments],\n\t\t\tparent: undefined,\n\t\t\tparams: {},\n\t\t\ttype: 'index'\n\t\t}));\n\t\tlet routeConfig: RouteWrapper | undefined;\n\t\tlet matchedRoutes: RouteWrapper[] = [];\n\t\twhile ((routeConfig = routeConfigs.pop())) {\n\t\t\tconst { route, parent, segments, params } = routeConfig;\n\t\t\tlet segmentIndex = 0;\n\t\t\tlet type: MatchType = 'index';\n\t\t\tlet paramIndex = 0;\n\t\t\tlet routeMatch = true;\n\t\t\tif (segments.length < route.segments.length) {\n\t\t\t\trouteMatch = false;\n\t\t\t} else {\n\t\t\t\twhile (segments.length > 0) {\n\t\t\t\t\tif (route.segments[segmentIndex] === undefined) {\n\t\t\t\t\t\ttype = 'partial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst segment = segments.shift()!;\n\t\t\t\t\tif (route.segments[segmentIndex] === PARAM) {\n\t\t\t\t\t\tparams[route.params[paramIndex++]] = segment;\n\t\t\t\t\t\tthis._currentParams = { ...this._currentParams, ...params };\n\t\t\t\t\t} else if (route.segments[segmentIndex] !== segment) {\n\t\t\t\t\t\trouteMatch = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tsegmentIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (routeMatch) {\n\t\t\t\trouteConfig.type = type;\n\t\t\t\tmatchedRoutes.push({ route, parent, type, params, segments: [] });\n\t\t\t\tif (segments.length) {\n\t\t\t\t\trouteConfigs = [\n\t\t\t\t\t\t...routeConfigs,\n\t\t\t\t\t\t...route.children.map((childRoute) => ({\n\t\t\t\t\t\t\troute: childRoute,\n\t\t\t\t\t\t\tsegments: [...segments],\n\t\t\t\t\t\t\tparent: routeConfig,\n\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\tparams: { ...params }\n\t\t\t\t\t\t}))\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet matchedRouteId: string | undefined = undefined;\n\n\t\tlet matchedRoute = matchedRoutes.shift();\n\t\twhile (matchedRoute && matchedRoutes.length) {\n\t\t\tlet currentMatch = matchedRoutes.shift();\n\t\t\tif (currentMatch && currentMatch.route.score > matchedRoute.route.score) {\n\t\t\t\tmatchedRoute = currentMatch;\n\t\t\t}\n\t\t}\n\n\t\tif (matchedRoute) {\n\t\t\tif (matchedRoute.type === 'partial') {\n\t\t\t\tmatchedRoute.type = 'error';\n\t\t\t}\n\t\t\tmatchedRouteId = matchedRoute.route.id;\n\t\t\tconst title = this._options.setDocumentTitle\n\t\t\t\t? this._options.setDocumentTitle({\n\t\t\t\t\t\tid: matchedRouteId,\n\t\t\t\t\t\ttitle: matchedRoute.route.title,\n\t\t\t\t\t\tparams: matchedRoute.params,\n\t\t\t\t\t\tqueryParams: this._currentQueryParams\n\t\t\t\t  })\n\t\t\t\t: matchedRoute.route.title;\n\t\t\tif (title) {\n\t\t\t\tglobal.document.title = title;\n\t\t\t}\n\t\t\twhile (matchedRoute) {\n\t\t\t\tlet { type, params, route } = matchedRoute;\n\t\t\t\tlet parent: RouteWrapper | undefined = matchedRoute.parent;\n\t\t\t\tconst matchedRouteContext: RouteContext = {\n\t\t\t\t\tid: route.id,\n\t\t\t\t\toutlet: route.outlet,\n\t\t\t\t\tqueryParams: this._currentQueryParams,\n\t\t\t\t\tparams,\n\t\t\t\t\ttype,\n\t\t\t\t\tisError: () => type === 'error',\n\t\t\t\t\tisExact: () => type === 'index'\n\t\t\t\t};\n\t\t\t\tconst previousMatchedOutlet = previousMatchedRoutes[route.id];\n\t\t\t\tconst routeMap = this._matchedOutletMap.get(route.outlet) || new Map();\n\t\t\t\trouteMap.set(route.id, matchedRouteContext);\n\t\t\t\tthis._matchedOutletMap.set(route.outlet, routeMap);\n\t\t\t\tthis._matchedRoutes[route.id] = matchedRouteContext;\n\t\t\t\tif (!previousMatchedOutlet || !matchingParams(previousMatchedOutlet, matchedRouteContext)) {\n\t\t\t\t\tthis.emit({ type: 'route', route: matchedRouteContext, action: 'enter' });\n\t\t\t\t\tthis.emit({ type: 'outlet', outlet: matchedRouteContext, action: 'enter' });\n\t\t\t\t}\n\t\t\t\tmatchedRoute = parent;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._matchedRoutes.errorRoute = {\n\t\t\t\tid: 'errorRoute',\n\t\t\t\toutlet: 'errorRoute',\n\t\t\t\tqueryParams: {},\n\t\t\t\tparams: {},\n\t\t\t\tisError: () => true,\n\t\t\t\tisExact: () => false,\n\t\t\t\ttype: 'error'\n\t\t\t};\n\t\t}\n\n\t\tconst previousMatchedOutletKeys = Object.keys(previousMatchedRoutes);\n\t\tfor (let i = 0; i < previousMatchedOutletKeys.length; i++) {\n\t\t\tconst key = previousMatchedOutletKeys[i];\n\t\t\tconst matchedRoute = this._matchedRoutes[key];\n\t\t\tif (!matchedRoute || !matchingParams(previousMatchedRoutes[key], matchedRoute)) {\n\t\t\t\tthis.emit({ type: 'route', route: previousMatchedRoutes[key], action: 'exit' });\n\t\t\t\tthis.emit({ type: 'outlet', outlet: previousMatchedRoutes[key], action: 'exit' });\n\t\t\t}\n\t\t}\n\t\tthis._currentMatchedRoute = matchedRouteId ? this._matchedRoutes[matchedRouteId] : undefined;\n\t\tthis.emit({\n\t\t\ttype: 'nav',\n\t\t\toutlet: matchedRouteId,\n\t\t\tcontext: this._currentMatchedRoute\n\t\t});\n\t\tif (this._options.resetScroll) {\n\t\t\tconst { window = global.window } = this._options;\n\t\t\ttry {\n\t\t\t\twindow.scroll(0, 0);\n\t\t\t} catch (e) {\n\t\t\t\t// Catch errors if we're in an environment without window.scroll\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport default Router;\n"]}