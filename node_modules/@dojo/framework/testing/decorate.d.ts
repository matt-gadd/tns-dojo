import { RenderResult, DNode } from '../core/interfaces';
import { Instruction } from './renderer';
import Map from '../shim/Map';
export interface DecoratorResult<T> {
    hasDeferredProperties: boolean;
    nodes: T;
}
export declare function decorateNodes(dNode: DNode[]): DecoratorResult<DNode[]>;
export declare function decorateNodes(dNode: DNode): DecoratorResult<DNode>;
export declare function decorateNodes(dNode: DNode | DNode[]): DecoratorResult<DNode | DNode[]>;
export declare function decorate(actual: RenderResult, expected: RenderResult, instructions: Map<string, Instruction>): void;
export default decorate;
