{"version":3,"file":"decorate.mjs","sourceRoot":"","sources":["decorate.ts"],"names":[],"mappings":"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","sourcesContent":["import { isVNode, isWNode } from '../core/vdom';\nimport { RenderResult, DNode, VNode, WNode } from '../core/interfaces';\nimport { Instruction } from './renderer';\nimport Map from '../shim/Map';\nimport { findIndex } from '../shim/array';\nimport { decorate as coreDecorate } from '../core/util';\n\ntype DecorateTuple = [DNode[], DNode[]];\n\nexport interface DecoratorResult<T> {\n\thasDeferredProperties: boolean;\n\tnodes: T;\n}\n\nfunction isNode(node: any): node is VNode & { id?: string } | WNode & { id?: string } {\n\treturn isVNode(node) || isWNode(node);\n}\n\nfunction isWrappedNode(node: any): node is VNode & { id: string } | WNode & { id: string } {\n\treturn Boolean(isNode(node) && node.id);\n}\n\nfunction isIgnoredNode(node: any): node is VNode | WNode {\n\treturn Boolean(node && node.isIgnore && isNode(node));\n}\n\nfunction isSameType(expected: DNode | { [index: string]: any }, actual: DNode | { [index: string]: any }): boolean {\n\tif (isNode(expected) && isNode(actual)) {\n\t\tif (isVNode(expected) && isVNode(actual) && expected.tag === actual.tag) {\n\t\t\treturn true;\n\t\t}\n\t\treturn isWNode(expected) && isWNode(actual) && expected.widgetConstructor === actual.widgetConstructor;\n\t}\n\treturn false;\n}\n\nexport function decorateNodes(dNode: DNode[]): DecoratorResult<DNode[]>;\nexport function decorateNodes(dNode: DNode): DecoratorResult<DNode>;\nexport function decorateNodes(dNode: DNode | DNode[]): DecoratorResult<DNode | DNode[]>;\nexport function decorateNodes(dNode: any): DecoratorResult<DNode | DNode[]> {\n\tlet hasDeferredProperties = false;\n\tfunction addParent(parent: WNode | VNode): void {\n\t\t(parent.children || []).forEach((child: any) => {\n\t\t\tif (isVNode(child) || isWNode(child)) {\n\t\t\t\t(child as any).parent = parent;\n\t\t\t}\n\t\t});\n\t\tif (isVNode(parent) && typeof parent.deferredPropertiesCallback === 'function') {\n\t\t\thasDeferredProperties = true;\n\t\t\tparent.properties = { ...parent.properties, ...parent.deferredPropertiesCallback(false) };\n\t\t}\n\t}\n\tconst nodes = coreDecorate(\n\t\tdNode,\n\t\taddParent,\n\t\t(node: DNode): node is WNode | VNode => isWNode(node) || isVNode(node)\n\t);\n\treturn { hasDeferredProperties, nodes };\n}\n\nexport function decorate(actual: RenderResult, expected: RenderResult, instructions: Map<string, Instruction>) {\n\tlet nodes: DecorateTuple[] = [\n\t\t[Array.isArray(actual) ? [...actual] : [actual], Array.isArray(expected) ? [...expected] : [expected]]\n\t];\n\tconst wrappedNodeIds = [];\n\n\tlet node = nodes.shift();\n\twhile (node) {\n\t\tconst [actualNodes, expectedNodes] = node.map((nodes) =>\n\t\t\tnodes.filter((node) => node != null && node !== true && node !== false)\n\t\t);\n\t\tlet childNodes: DecorateTuple[] = [];\n\t\twhile (expectedNodes.length > 0) {\n\t\t\tlet actualNode: DNode | { [index: string]: any } = actualNodes.shift();\n\t\t\tlet expectedNode: DNode | { [index: string]: any } = expectedNodes.shift();\n\t\t\tif (isWrappedNode(expectedNode)) {\n\t\t\t\tif (wrappedNodeIds.indexOf(expectedNode.id) !== -1) {\n\t\t\t\t\tthrow new Error('Cannot use a wrapped test node more than once within an assertion template.');\n\t\t\t\t}\n\t\t\t\tconst instruction = instructions.get(expectedNode.id);\n\t\t\t\tif (instruction && isSameType(actualNode, expectedNode)) {\n\t\t\t\t\tif (instruction.type === 'child') {\n\t\t\t\t\t\tconst expectedChild: any = expectedNode.children && expectedNode.children[0];\n\t\t\t\t\t\tconst actualChild: any = isNode(actualNode) && actualNode.children && actualNode.children[0];\n\n\t\t\t\t\t\tif (typeof expectedChild === 'function' || typeof actualChild === 'function') {\n\t\t\t\t\t\t\tif (typeof expectedChild === 'function') {\n\t\t\t\t\t\t\t\tconst newExpectedChildren = expectedChild();\n\t\t\t\t\t\t\t\t(expectedNode as any).children[0] = newExpectedChildren;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (typeof actualChild === 'function') {\n\t\t\t\t\t\t\t\tconst newActualChildren = actualChild(...instruction.params);\n\t\t\t\t\t\t\t\t(actualNode as any).children[0] = newActualChildren;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (typeof expectedChild === 'object') {\n\t\t\t\t\t\t\tconst keys = Object.keys(expectedChild);\n\t\t\t\t\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\t\t\t\t\tconst key = keys[i];\n\t\t\t\t\t\t\t\tif (typeof expectedChild[key] === 'function') {\n\t\t\t\t\t\t\t\t\tconst newExpectedChildren = expectedChild[key]();\n\t\t\t\t\t\t\t\t\texpectedChild[key] = newExpectedChildren;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (typeof actualChild === 'object' && typeof actualChild[key] === 'function') {\n\t\t\t\t\t\t\t\t\tconst newActualChildren = actualChild[key](...(instruction.params[key] || []));\n\t\t\t\t\t\t\t\t\tactualChild[key] = newActualChildren;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tinstruction.type === 'property' &&\n\t\t\t\t\t\tisNode(actualNode) &&\n\t\t\t\t\t\ttypeof actualNode.properties[instruction.key] === 'function'\n\t\t\t\t\t) {\n\t\t\t\t\t\tactualNode.properties[instruction.key](...instruction.params);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twrappedNodeIds.push(expectedNode.id);\n\t\t\t}\n\n\t\t\tif (isIgnoredNode(expectedNode)) {\n\t\t\t\tconst index = findIndex((expectedNode as any).parent.children, (child) => child === expectedNode);\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tif (isSameType(expectedNode, actualNode)) {\n\t\t\t\t\t\t(expectedNode as any).parent.children[index] = actualNode || expectedNode;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isNode(expectedNode) && isNode(actualNode)) {\n\t\t\t\tconst propertyKeys = Object.keys(expectedNode.properties);\n\t\t\t\tfor (let i = 0; i < propertyKeys.length; i++) {\n\t\t\t\t\tconst key = propertyKeys[i];\n\t\t\t\t\tif (expectedNode.properties[key] != null && expectedNode.properties[key].type === 'compare') {\n\t\t\t\t\t\tconst result = expectedNode.properties[key](actualNode.properties[key]);\n\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\texpectedNode.properties[key] = actualNode.properties[key];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\texpectedNode.properties[key] = 'Compare FAILED';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isNode(expectedNode)) {\n\t\t\t\tif (typeof expectedNode.properties === 'function') {\n\t\t\t\t\tconst actualProperties = isNode(actualNode) ? actualNode.properties : {};\n\t\t\t\t\texpectedNode.properties = (expectedNode as any).properties(actualProperties);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isNode(expectedNode)) {\n\t\t\t\tconst expectedChildren = expectedNode.children ? [...expectedNode.children] : [];\n\t\t\t\tconst actualChildren = isNode(actualNode) && actualNode.children ? [...actualNode.children] : [];\n\t\t\t\tchildNodes.push([actualChildren, expectedChildren]);\n\t\t\t} else if (expectedNode && typeof expectedNode === 'object') {\n\t\t\t\tconst expectedChildren = Object.keys(expectedNode).map((key) => (expectedNode as any)[key]);\n\t\t\t\tconst actualChildren =\n\t\t\t\t\tactualNode && typeof actualNode === 'object'\n\t\t\t\t\t\t? Object.keys(actualNode).map((key) => (actualNode as any)[key])\n\t\t\t\t\t\t: [];\n\t\t\t\tchildNodes.push([actualChildren, expectedChildren]);\n\t\t\t}\n\t\t}\n\t\tchildNodes.reverse();\n\t\tnodes = [...childNodes, ...nodes];\n\t\tnode = nodes.shift();\n\t}\n}\n\nexport default decorate;\n"]}