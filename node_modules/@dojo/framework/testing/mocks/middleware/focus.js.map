{"version":3,"file":"focus.js","sourceRoot":"","sources":["focus.ts"],"names":[],"mappings":";;;;;;;;;;;IAAA,2CAAsF;IACtF,wDAAmE;IACnE,0DAAyE;IAGzE,IAAM,MAAM,GAAG,+BAAsB,EAAc,CAAC;IACpD,SAAgB,eAAe;QAC9B,IAAM,UAAU,GAA+B,EAAE,CAAC;QAClD,IAAI,UAAkC,CAAC;QAEvC,IAAM,OAAO,GAAG,aAAM,CAAC,EAAE,WAAW,oBAAA,EAAE,OAAO,gBAAA,EAAE,MAAM,QAAA,EAAE,YAAY,qBAAA,EAAE,IAAI,aAAA,EAAE,CAAC,CAAC;QAE7E,IAAM,gBAAgB,GAAG,OAAO,CAAC,UAAC,EAAwC;gBAAtC,UAAE,EAAE,0BAAU,EAAE,0BAAU,EAAE,sBAAQ;YACvE,UAAU,GAAG,UAAU,CAAC,WAAW,CAAC;YAC5B,IAAA,qCAAQ,CAAa;YAC7B,IAAM,eAAe,GAAG,QAAQ,CAAC;gBAChC,EAAE,IAAA;gBACF,UAAU,YAAA;gBACV,UAAU,YAAA;gBACV,QAAQ,UAAA;aACR,CAAC,CAAC;YAEH,eAAe,CAAC,SAAS,GAAG,UAAC,GAAoB,IAAK,OAAA,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,EAAjB,CAAiB,CAAC;YAExE,OAAO,eAAe,CAAC;QACxB,CAAC,CAAC,CAAC;QAIH,SAAS,SAAS,CAAC,GAAqB,EAAE,KAAe;YACxD,IAAI,GAAG,IAAI,KAAK,EAAE;gBACjB,UAAU,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;gBACxB,UAAU,IAAI,UAAU,EAAE,CAAC;aAC3B;iBAAM;gBACN,OAAO,gBAAgB,EAAE,CAAC;aAC1B;QACF,CAAC;QAED,OAAO,SAAS,CAAC;IAClB,CAAC;IAjCD,0CAiCC;IAED,kBAAe,eAAe,CAAC","sourcesContent":["import { create, invalidator, diffProperty, destroy, node } from '../../../core/vdom';\nimport focus, { FocusState } from '../../../core/middleware/focus';\nimport { createICacheMiddleware } from '../../../core/middleware/icache';\nimport { DefaultMiddlewareResult } from '../../../core/interfaces';\n\nconst icache = createICacheMiddleware<FocusState>();\nexport function createFocusMock() {\n\tconst focusNodes: { [key: string]: boolean } = {};\n\tlet invalidate: () => void | undefined;\n\n\tconst factory = create({ invalidator, destroy, icache, diffProperty, node });\n\n\tconst mockFocusFactory = factory(({ id, middleware, properties, children }) => {\n\t\tinvalidate = middleware.invalidator;\n\t\tconst { callback } = focus();\n\t\tconst focusMiddleware = callback({\n\t\t\tid,\n\t\t\tmiddleware,\n\t\t\tproperties,\n\t\t\tchildren\n\t\t});\n\n\t\tfocusMiddleware.isFocused = (key: string | number) => !!focusNodes[key];\n\n\t\treturn focusMiddleware;\n\t});\n\n\tfunction mockFocus(): DefaultMiddlewareResult;\n\tfunction mockFocus(key: string | number, value: boolean): void;\n\tfunction mockFocus(key?: string | number, value?: boolean): void | DefaultMiddlewareResult {\n\t\tif (key && value) {\n\t\t\tfocusNodes[key] = value;\n\t\t\tinvalidate && invalidate();\n\t\t} else {\n\t\t\treturn mockFocusFactory();\n\t\t}\n\t}\n\n\treturn mockFocus;\n}\n\nexport default createFocusMock;\n"]}